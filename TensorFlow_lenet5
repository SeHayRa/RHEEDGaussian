{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "hi\n"
     ]
    }
   ],
   "source": [
    "print('hi')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2023-07-27 10:09:13.142921: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.\n",
      "To enable the following instructions: SSE4.1 SSE4.2 AVX AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.\n",
      "2023-07-27 10:09:14.167203: I tensorflow/core/common_runtime/process_util.cc:146] Creating new thread pool with default inter op setting: 2. Tune using inter_op_parallelism_threads for best performance.\n",
      "2023-07-27 10:09:14.299157: I tensorflow/core/common_runtime/executor.cc:1197] [/device:CPU:0] (DEBUG INFO) Executor start aborting (this does not indicate an error and you can ignore this message): INVALID_ARGUMENT: You must feed a value for placeholder tensor 'Placeholder/_0' with dtype double and shape [13189,29,48]\n",
      "\t [[{{node Placeholder/_0}}]]\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import h5py\n",
    "import tensorflow as tf\n",
    "\n",
    "class HDF5Dataset:\n",
    "    def __init__(self, file_path, data_key):\n",
    "        self.file_path = file_path\n",
    "        self.data_key = data_key\n",
    "\n",
    "        # Open the HDF5 file\n",
    "        self.h5file = h5py.File(file_path, 'r')\n",
    "        # Get the HDF5 dataset\n",
    "        self.data = self.h5file[data_key]\n",
    "\n",
    "    def __len__(self):\n",
    "        return self.data.shape[0]\n",
    "\n",
    "    def __getitem__(self, index):\n",
    "        image = self.data[index]\n",
    "        # image = image / image.max()\n",
    "        return image\n",
    "\n",
    "# Specify the path to the HDF5 file and the dataset key\n",
    "file_path = '/home/ferroelectric/RHEED_paper/m3_learning/m3_learning/papers/2023_RHEED_PLD_SrTiO3/Datasets/test6_gaussian_fit_parameters_all-04232023.h5'\n",
    "dataset_key = 'growth_1/spot_2/raw_image'\n",
    "\n",
    "# Create an instance of the HDF5Dataset\n",
    "dataset = HDF5Dataset(file_path, dataset_key)\n",
    "\n",
    "# Convert the PyTorch Dataset to TensorFlow Dataset\n",
    "tf_dataset = tf.data.Dataset.from_tensor_slices(dataset.data)\n",
    "\n",
    "# Preprocess and batch the data\n",
    "batch_size = 300\n",
    "# tf_dataset = tf_dataset.map(lambda x: x / x.max())  # Normalization\n",
    "tf_dataset = tf_dataset.batch(batch_size)\n",
    "\n",
    "# Take the first batch (containing one image) from the dataset\n",
    "one_image_batch = tf_dataset.take(1)\n",
    "\n",
    "# Get the image from the batch\n",
    "one_image = next(iter(one_image_batch))\n",
    "\n",
    "# Convert the image tensor to a NumPy array for visualization\n",
    "image_np = one_image.numpy()\n",
    "\n",
    "# Visualize the image\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "plt.imshow(image_np[0])\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Tensor(\"strided_slice:0\", shape=(5,), dtype=float32)\n",
      "Model: \"le_net5_13\"\n",
      "_________________________________________________________________\n",
      " Layer (type)                Output Shape              Param #   \n",
      "=================================================================\n",
      " sequential_26 (Sequential)  (None, 6, 11, 6)          180       \n",
      "                                                                 \n",
      " sequential_27 (Sequential)  (None, 1, 3, 16)          2480      \n",
      "                                                                 \n",
      " dense_39 (Dense)            multiple                  2352      \n",
      "                                                                 \n",
      " re_lu_54 (ReLU)             multiple                  0         \n",
      "                                                                 \n",
      " dense_40 (Dense)            multiple                  1176      \n",
      "                                                                 \n",
      " re_lu_55 (ReLU)             multiple                  0         \n",
      "                                                                 \n",
      " dense_41 (Dense)            multiple                  125       \n",
      "                                                                 \n",
      " flatten_13 (Flatten)        multiple                  0         \n",
      "                                                                 \n",
      "=================================================================\n",
      "Total params: 6,313\n",
      "Trainable params: 6,269\n",
      "Non-trainable params: 44\n",
      "_________________________________________________________________\n"
     ]
    }
   ],
   "source": [
    "import tensorflow as tf\n",
    "from tensorflow.keras import layers, models\n",
    "\n",
    "class LeNet5(tf.keras.Model):\n",
    "    def __init__(self, func, num_classes, flag=False):\n",
    "        super(LeNet5, self).__init__()\n",
    "        self.layer1 = tf.keras.Sequential([\n",
    "            layers.Conv2D(6, kernel_size=5, strides=1, padding='valid', input_shape=(29, 48, 1)),\n",
    "            layers.BatchNormalization(),\n",
    "            layers.ReLU(),\n",
    "            layers.MaxPool2D(pool_size=4, strides=4)\n",
    "        ])\n",
    "        self.layer2 = tf.keras.Sequential([\n",
    "            layers.Conv2D(16, kernel_size=5, strides=1, padding='valid'),\n",
    "            layers.BatchNormalization(),\n",
    "            layers.ReLU(),\n",
    "            layers.MaxPool2D(pool_size=2, strides=2)\n",
    "        ])\n",
    "        self.fc = layers.Dense(48)\n",
    "        self.relu = layers.ReLU()\n",
    "        self.fc1 = layers.Dense(24)\n",
    "        self.relu1 = layers.ReLU()\n",
    "        self.fc2 = layers.Dense(num_classes)\n",
    "        self.func = func\n",
    "        self.flag = flag\n",
    "        self.flatten=layers.Flatten()\n",
    "\n",
    "    def call(self, x):\n",
    "        x = tf.cast(x, tf.float32)\n",
    "        # print(x.shape)\n",
    "        out = self.layer1(x)\n",
    "        # print(out.shape)\n",
    "        out = self.layer2(out)\n",
    "        # print(out.shape)\n",
    "        out=self.flatten(out)\n",
    "        # print(out.shape)\n",
    "        out = self.fc(out)\n",
    "        # print(out.shape)\n",
    "\n",
    "        out = self.relu(out)\n",
    "        # print(out.shape)\n",
    "        out = self.fc1(out)\n",
    "        # print(out.shape)\n",
    "        out = self.relu1(out)\n",
    "        # print(out.shape)\n",
    "        embedding = self.fc2(out)\n",
    "\n",
    "        \n",
    "        final = self.func(embedding)\n",
    "        print(embedding[0])\n",
    "        if self.flag:\n",
    "            return out, embedding, final\n",
    "\n",
    "        return final\n",
    "\n",
    "# Create an instance of the LeNet5 model\n",
    "num_classes = 5  # Replace with the number of classes for your specific problem\n",
    "func = tf.nn.softmax  # Replace with the activation function you want to use for the final output\n",
    "model = LeNet5(func, num_classes)\n",
    "\n",
    "# To see the model summary\n",
    "model.build(input_shape=(None, 29, 48, 1))\n",
    "model.summary()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Generated Image Shape: (1, 29, 48, 1)\n"
     ]
    }
   ],
   "source": [
    "import tensorflow as tf\n",
    "\n",
    "class GaussianGenerator(tf.keras.layers.Layer):\n",
    "    def __init__(self, img_dim):\n",
    "        super(GaussianGenerator, self).__init__()\n",
    "        self.img_dim = img_dim\n",
    "\n",
    "    def call(self, params):\n",
    "        batch_size = params.shape[0]\n",
    "        mean_x, mean_y, cov_x, cov_y, theta = tf.unstack(params, axis=-1)\n",
    "        # cov_x = tf.clip_by_value(cov_x, clip_value_min=1e-9)\n",
    "        # cov_y = tf.clip_by_value(cov_y, clip_value_min=1e-9)\n",
    "\n",
    "        x = tf.range(self.img_dim[1], dtype=tf.float32)\n",
    "        y = tf.range(self.img_dim[0], dtype=tf.float32)\n",
    "        x, y = tf.meshgrid(x, y)\n",
    "\n",
    "        x = tf.expand_dims(x, axis=0)\n",
    "        y = tf.expand_dims(y, axis=0)\n",
    "\n",
    "        x = tf.repeat(x, batch_size, axis=0)\n",
    "        y = tf.repeat(y, batch_size, axis=0)\n",
    "        \n",
    "\n",
    "        rota_matrix = tf.stack([tf.cos(theta), -tf.sin(theta), tf.sin(theta), tf.cos(theta)], axis=-1)\n",
    "        rota_matrix = tf.reshape(rota_matrix, (batch_size, 2, 2))\n",
    "        \n",
    "        # print(mean_x.shape)\n",
    "        # print(f'mean_x:{mean_x}')\n",
    "        # print(mean_y.shape)\n",
    "        # print(f'mean_y:{mean_y}')\n",
    "        # print((tf.expand_dims(mean_x, axis=-1)))\n",
    "        # print((tf.expand_dims(mean_y, axis=-1)))\n",
    "        # print((tf.expand_dims(mean_x, axis=-1)).shape)\n",
    "        # print((tf.expand_dims(mean_y, axis=-1)).shape)\n",
    "        # print(tf.expand_dims((tf.expand_dims(mean_y, axis=-1)),axis=-1).shape)\n",
    "        # print(tf.expand_dims((tf.expand_dims(mean_x, axis=-1)),axis=-1).shape)\n",
    "        # print(tf.expand_dims((tf.expand_dims(mean_y, axis=-1)),axis=-1))\n",
    "        # print(tf.expand_dims((tf.expand_dims(mean_x, axis=-1)),axis=-1))\n",
    "\n",
    "        \n",
    "        xy = tf.stack([x - tf.expand_dims((tf.expand_dims(mean_x, axis=-1)),axis=-1), y - tf.expand_dims((tf.expand_dims(mean_y, axis=-1)),axis=-1)], axis=-1)\n",
    "        xy = tf.einsum('bijk,bkl->bijl', xy, rota_matrix)\n",
    "\n",
    "        img = tf.exp(-0.5 * (xy[:, :, :, 0]**2 / ((tf.expand_dims((tf.expand_dims(cov_x, axis=-1)),axis=-1))**2) + xy[:, :, :, 1]**2 / ((tf.expand_dims((tf.expand_dims(cov_y, axis=-1)),axis=-1))**2)))\n",
    "\n",
    "        # print(xy[:, :, :, 0])\n",
    "        # print(xy[..., 1])\n",
    "        \n",
    "        \n",
    "        return tf.expand_dims(img, axis=-1)\n",
    "\n",
    "# Create an instance of the GaussianGenerator model\n",
    "img_dim = (29, 48)  # Replace with the desired image dimensions\n",
    "model = GaussianGenerator(img_dim)\n",
    "\n",
    "# Generate sample parameters for testing\n",
    "sample_params = tf.constant([0.2, 0.2, 5.0, 5.0, 0.2], dtype=tf.float32)\n",
    "\n",
    "# Reshape the sample_params tensor to have a batch dimension\n",
    "sample_params_batched = tf.expand_dims(sample_params, axis=0)\n",
    "\n",
    "# Call the model to generate the Gaussian image\n",
    "generated_img = model(sample_params_batched)\n",
    "\n",
    "\n",
    "# Display the generated image shape\n",
    "print(\"Generated Image Shape:\", generated_img.shape)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'data_loader' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "Cell \u001b[0;32mIn[4], line 9\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[39m# Assuming you have a sample input 'input_data'\u001b[39;00m\n\u001b[1;32m      8\u001b[0m \u001b[39mfor\u001b[39;00m i \u001b[39min\u001b[39;00m \u001b[39mrange\u001b[39m(\u001b[39m10\u001b[39m):\n\u001b[0;32m----> 9\u001b[0m     images \u001b[39m=\u001b[39m \u001b[39mnext\u001b[39m(\u001b[39miter\u001b[39m(data_loader))\n\u001b[1;32m     10\u001b[0m     output1, output2, output3 \u001b[39m=\u001b[39m model(images)\n\u001b[1;32m     11\u001b[0m     \u001b[39mprint\u001b[39m(\u001b[39m'\u001b[39m\u001b[39moutput1\u001b[39m\u001b[39m'\u001b[39m)\n",
      "\u001b[0;31mNameError\u001b[0m: name 'data_loader' is not defined"
     ]
    }
   ],
   "source": [
    "func=GaussianGenerator  \n",
    "num_classes=5\n",
    "\n",
    "model = LeNet5(func, num_classes, flag=True)  # Set the flag to True to get all outputs\n",
    "i=0\n",
    "# Assuming you have a sample input 'input_data'\n",
    "\n",
    "for i in range(10):\n",
    "    images = next(iter(data_loader))\n",
    "    output1, output2, output3 = model(images)\n",
    "    print('output1')\n",
    "    print(output1)\n",
    "    print('output2')\n",
    "    print(output2)\n",
    "    print('output3')\n",
    "    print(output3)\n",
    "    \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "14\n"
     ]
    }
   ],
   "source": [
    "print(len(data_loader))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2023-07-27 11:19:36.775489: I tensorflow/core/common_runtime/executor.cc:1197] [/device:CPU:0] (DEBUG INFO) Executor start aborting (this does not indicate an error and you can ignore this message): INVALID_ARGUMENT: You must feed a value for placeholder tensor 'Placeholder/_0' with dtype double and shape [13189,29,48]\n",
      "\t [[{{node Placeholder/_0}}]]\n",
      "2023-07-27 11:19:36.775707: I tensorflow/core/common_runtime/executor.cc:1197] [/device:CPU:0] (DEBUG INFO) Executor start aborting (this does not indicate an error and you can ignore this message): INVALID_ARGUMENT: You must feed a value for placeholder tensor 'Placeholder/_0' with dtype double and shape [13189,29,48]\n",
      "\t [[{{node Placeholder/_0}}]]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "tf.Tensor([ 6.890579    6.072129    1.6331283   1.1549715  -0.33095294], shape=(5,), dtype=float32)\n",
      "tf.Tensor([41.441387 35.114735 20.606823 24.289118  4.28304 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([215.37727  201.46489  150.13132  178.66565  -35.458275], shape=(5,), dtype=float32)\n",
      "Epoch [1/200], Loss: 23305.782479510173\n",
      "tf.Tensor([112.43842  137.15446  125.28962  136.81558  -61.250404], shape=(5,), dtype=float32)\n",
      "tf.Tensor([114.45962 157.98419 157.79973 168.23354 -96.84531], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 473.2587   705.96014  752.592    784.968   -507.89923], shape=(5,), dtype=float32)\n",
      "Epoch [2/200], Loss: 421.40860476579286\n",
      "tf.Tensor([ 169.7532   277.90237  305.44745  316.78445 -222.43817], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 255.30473  438.64542  493.57587  504.06714 -378.75684], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  783.0851  1319.7089  1497.5853  1517.3934 -1286.6024], shape=(5,), dtype=float32)\n",
      "Epoch [3/200], Loss: 1016.5010994007239\n",
      "tf.Tensor([ 354.82217  615.296    690.5735   689.31    -614.7601 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 1075.55    1799.6477  1957.3066  1944.3499 -1933.4843], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 386.2357   634.33325  664.7225   649.64685 -698.8846 ], shape=(5,), dtype=float32)\n",
      "Epoch [4/200], Loss: 549.9759368556478\n",
      "tf.Tensor([ 444.63937  716.2025   719.6215   696.03265 -809.4585 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  638.5982   1024.146     990.2833    950.28687 -1166.4684 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 1759.1405  2811.878   2651.2986  2549.295  -3266.08  ], shape=(5,), dtype=float32)\n",
      "Epoch [5/200], Loss: 233.91945791070347\n",
      "tf.Tensor([ 1806.2622  2985.4792  2829.553   2742.8909 -3395.2407], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  566.7274    973.35864   941.6494    919.96454 -1069.876  ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  724.62537  1312.7354   1293.541    1275.7717  -1396.2183 ], shape=(5,), dtype=float32)\n",
      "Epoch [6/200], Loss: 110.07522056878811\n",
      "tf.Tensor([  581.5002  1064.1991  1063.026   1058.5582 -1138.3868], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 1910.2645  3576.1365  3610.3643  3629.5789 -3872.278 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  758.09143  1483.3748   1487.6399   1498.2991  -1526.7266 ], shape=(5,), dtype=float32)\n",
      "Epoch [7/200], Loss: 137.64011761216764\n",
      "tf.Tensor([  615.71655  1200.2787   1188.0883   1201.4031  -1246.8239 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  797.57996  1603.1875   1562.819    1582.558   -1623.4062 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2093.5972  4172.398   4018.3408  4077.4238 -4354.3667], shape=(5,), dtype=float32)\n",
      "Epoch [8/200], Loss: 57.38309461110319\n",
      "tf.Tensor([ 2167.4136  4312.1587  4046.113   4112.106  -4487.2515], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  868.34314  1776.3341   1618.3102   1635.529   -1766.9039 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  695.4829  1411.7186  1272.7428  1288.0801 -1410.1093], shape=(5,), dtype=float32)\n",
      "Epoch [9/200], Loss: 25.669312175978163\n",
      "tf.Tensor([ 2266.5447  4627.044   4197.3643  4266.406  -4685.309 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  882.4905  1870.062   1694.498   1720.0654 -1792.7278], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  695.57153  1468.4012   1345.3932   1369.0002  -1416.1335 ], shape=(5,), dtype=float32)\n",
      "Epoch [10/200], Loss: 46.26578213541061\n",
      "tf.Tensor([ 2240.4944  4759.8013  4453.667   4546.2773 -4685.944 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  688.78577  1490.6758   1393.9757   1420.121   -1412.7352 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  866.01764  1929.0449   1816.218    1848.1385  -1785.4567 ], shape=(5,), dtype=float32)\n",
      "Epoch [11/200], Loss: 16.679668636176093\n",
      "tf.Tensor([  863.3915  1942.2867  1832.05    1861.7721 -1781.9863], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2220.0312  4899.5107  4650.0645  4724.3506 -4686.3853], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  682.29193  1533.641    1430.7754   1447.939   -1398.1263 ], shape=(5,), dtype=float32)\n",
      "Epoch [12/200], Loss: 33.104984889075105\n",
      "tf.Tensor([  858.24286  1982.5051   1833.7953   1850.0217  -1755.4032 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2210.8992  4996.525   4622.8643  4657.6206 -4617.6245], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  679.2683  1561.8389  1420.3569  1425.2129 -1375.1943], shape=(5,), dtype=float32)\n",
      "Epoch [13/200], Loss: 3.646874782631602\n",
      "tf.Tensor([  854.54877  2015.3291   1821.4161   1822.2206  -1729.1152 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2199.9583  5063.834   4607.326   4606.267  -4562.7793], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  672.23517  1575.0781   1423.3804   1419.7865  -1354.1764 ], shape=(5,), dtype=float32)\n",
      "Epoch [14/200], Loss: 16.788813142321455\n",
      "tf.Tensor([  668.14984  1575.3555   1428.7957   1423.9539  -1346.5876 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  836.77515  2023.1235   1842.564    1834.7112  -1692.2626 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2149.7666  5068.155   4680.0317  4664.018  -4477.2456], shape=(5,), dtype=float32)\n",
      "Epoch [15/200], Loss: 3.1385821867881094\n",
      "tf.Tensor([ 2137.1663  5067.242   4698.5938  4682.4243 -4457.1226], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  822.2021  2018.8058  1862.2227  1853.6328 -1666.4713], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  650.2163  1571.7084  1452.2261  1445.7834 -1313.9443], shape=(5,), dtype=float32)\n",
      "Epoch [16/200], Loss: 2.8667645142617624\n",
      "tf.Tensor([ 2113.1897  5076.6196  4725.119   4708.459  -4410.204 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  816.18646  2023.13     1865.7552   1856.206   -1651.1405 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  647.83453  1577.7046   1450.4478   1443.0188  -1304.5454 ], shape=(5,), dtype=float32)\n",
      "Epoch [17/200], Loss: 4.7951763619510865\n",
      "tf.Tensor([ 2112.5686  5110.235   4709.924   4690.5996 -4390.2725], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  648.5709  1583.7324  1445.8925  1438.112  -1301.65  ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  817.51324  2039.1062   1854.8103   1844.6652  -1643.1106 ], shape=(5,), dtype=float32)\n",
      "Epoch [18/200], Loss: 1.4013653387532254\n",
      "tf.Tensor([ 2114.8425  5138.597   4695.1016  4678.9175 -4377.549 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  648.3448  1588.4492  1444.0785  1438.2001 -1296.3699], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  815.2405  2043.2742  1855.9955  1850.1334 -1635.3824], shape=(5,), dtype=float32)\n",
      "Epoch [19/200], Loss: 2.705038208233896\n",
      "tf.Tensor([ 2105.6426  5142.3003  4707.15    4704.797  -4356.3623], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  812.0804  2042.4039  1861.0984  1859.308  -1629.3777], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  643.39935  1587.8845   1450.7803   1451.1228  -1287.2769 ], shape=(5,), dtype=float32)\n",
      "Epoch [20/200], Loss: 0.9083151700803206\n",
      "tf.Tensor([  809.27905  2041.3248   1865.898    1867.6294  -1624.2499 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  641.822   1587.7726  1453.338   1455.8921 -1284.1095], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2091.4182  5140.2715  4731.3647  4748.268  -4329.62  ], shape=(5,), dtype=float32)\n",
      "Epoch [21/200], Loss: 2.1246431703792457\n",
      "tf.Tensor([  808.29156  2043.9143   1866.1699   1870.1274  -1620.5056 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  642.5789  1590.9825  1451.5713  1454.5197 -1282.4131], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2095.7021  5156.7153  4718.3594  4733.937  -4328.739 ], shape=(5,), dtype=float32)\n",
      "Epoch [22/200], Loss: 1.1255971295154867\n",
      "tf.Tensor([  644.43976  1593.4512   1449.7336   1451.457   -1282.4094 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  811.5272  2051.2207  1860.245   1861.8307 -1620.6426], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2097.8638  5168.5454  4710.371   4721.728  -4328.5356], shape=(5,), dtype=float32)\n",
      "Epoch [23/200], Loss: 1.4842945450765148\n",
      "tf.Tensor([  644.4734  1594.7847  1449.9437  1450.3801 -1281.2424], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  809.6792  2051.3674  1862.5575  1863.1295 -1618.2035], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2089.7139  5164.907   4720.973   4730.81   -4320.0156], shape=(5,), dtype=float32)\n",
      "Epoch [24/200], Loss: 0.9081524956485575\n",
      "tf.Tensor([ 2086.1465  5162.2695  4725.99    4735.28   -4316.5356], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  805.1896  2049.1208  1867.2715  1867.3478 -1614.2208], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  639.2605  1592.3586  1455.3491  1454.8322 -1276.4132], shape=(5,), dtype=float32)\n",
      "Epoch [25/200], Loss: 0.8325547804549371\n",
      "tf.Tensor([  638.65265  1592.1382   1455.8502   1454.8798  -1275.7267 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  802.8893  2048.3071  1869.1884  1867.538  -1611.6276], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2077.1113  5158.9614  4734.2495  4736.0503 -4305.7393], shape=(5,), dtype=float32)\n",
      "Epoch [26/200], Loss: 1.1400594058525073\n",
      "tf.Tensor([  638.78577  1592.8629   1454.9912   1452.0806  -1274.722  ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2078.813   5164.2393  4727.184   4724.7285 -4305.3403], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  804.7829  2050.683   1865.7682  1860.6029 -1610.7744], shape=(5,), dtype=float32)\n",
      "Epoch [27/200], Loss: 0.7504295548715257\n",
      "tf.Tensor([ 2079.9202  5168.0103  4722.178   4717.3955 -4304.5654], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  639.8206  1594.2145  1452.9935  1448.4904 -1273.8605], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  804.6062  2050.9807  1865.4218  1860.0804 -1609.4   ], shape=(5,), dtype=float32)\n",
      "Epoch [28/200], Loss: 0.909263838613111\n",
      "tf.Tensor([  804.1031  2050.699   1865.9218  1861.0704 -1608.7299], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2075.8572  5165.7144  4725.8643  4724.4814 -4298.217 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  638.1652  1593.2438  1454.606   1451.7374 -1271.6785], shape=(5,), dtype=float32)\n",
      "Epoch [29/200], Loss: 0.7338112547490178\n",
      "tf.Tensor([  802.2572  2049.5024  1867.8586  1865.087  -1606.5316], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  637.5627  1592.8812  1455.1973  1453.2916 -1270.7655], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2072.5034  5162.8423  4730.0645  4734.4673 -4292.488 ], shape=(5,), dtype=float32)\n",
      "Epoch [30/200], Loss: 0.8323656974701487\n",
      "tf.Tensor([  637.7626  1593.1161  1454.7471  1453.3118 -1270.2511], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2073.7764  5165.1157  4726.2593  4731.545  -4291.5356], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  803.2381  2050.537   1866.0925  1864.4591 -1605.1967], shape=(5,), dtype=float32)\n",
      "Epoch [31/200], Loss: 0.7215415763332294\n",
      "tf.Tensor([  803.69476  2050.953    1865.4667   1863.7267  -1605.1685 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  639.0996  1594.3304  1452.8381  1451.2793 -1270.0096], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2076.391   5169.797   4719.6484  4724.852  -4291.278 ], shape=(5,), dtype=float32)\n",
      "Epoch [32/200], Loss: 0.7678983638359878\n",
      "tf.Tensor([  803.90216  2051.2896   1864.97     1863.3248  -1604.5256 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2074.6226  5168.2085  4721.7188  4727.6304 -4288.8867], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  638.1434  1593.7964  1453.7671  1452.6049 -1268.8519], shape=(5,), dtype=float32)\n",
      "Epoch [33/200], Loss: 0.7366911370817739\n",
      "tf.Tensor([  802.24274  2050.2358   1866.893    1865.7479  -1603.2458 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2071.459   5165.071   4727.1143  4733.399  -4286.11  ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  637.31195  1593.3217   1454.5612   1453.3151  -1268.0236 ], shape=(5,), dtype=float32)\n",
      "Epoch [34/200], Loss: 0.7493577699117863\n",
      "tf.Tensor([ 2070.75    5165.0405  4726.3335  4731.3647 -4284.2896], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  801.9132  2050.243   1866.7133  1864.5928 -1602.2433], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  637.6997  1593.7843  1453.8009  1451.6178 -1267.8032], shape=(5,), dtype=float32)\n",
      "Epoch [35/200], Loss: 0.7054308374407933\n",
      "tf.Tensor([  637.96    1594.0416  1453.453   1450.9714 -1267.8502], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2072.7708  5169.0615  4721.097   4722.57   -4284.952 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  802.7761  2051.1958  1865.5315  1862.2213 -1602.2574], shape=(5,), dtype=float32)\n",
      "Epoch [36/200], Loss: 0.7601498117993045\n",
      "tf.Tensor([  637.935   1594.1823  1453.4796  1450.7972 -1267.616 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  802.2746  2050.939   1866.2307  1863.1803 -1601.8553], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2070.9382  5167.416   4724.572   4726.851  -4282.9785], shape=(5,), dtype=float32)\n",
      "Epoch [37/200], Loss: 0.68629724203208\n",
      "tf.Tensor([ 2070.2039  5166.7056  4725.876   4728.613  -4282.3213], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  637.0569  1593.6918  1454.7039  1452.6022 -1266.913 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  801.2946  2050.4138  1867.6191  1865.2484 -1601.0204], shape=(5,), dtype=float32)\n",
      "Epoch [38/200], Loss: 0.7106237145249352\n",
      "tf.Tensor([  801.3649  2050.5222  1867.5669  1865.2129 -1600.972 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2069.8423  5167.0635  4726.2383  4729.432  -4281.366 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  637.4167  1594.1466  1454.3989  1452.2202 -1266.8706], shape=(5,), dtype=float32)\n",
      "Epoch [39/200], Loss: 0.6983350062265953\n",
      "tf.Tensor([ 2071.0112  5168.9893  4724.1333  4726.7993 -4282.098 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  637.8393  1594.5762  1454.0385  1451.6989 -1267.0704], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  802.5957  2051.7856  1866.4788  1863.6843 -1601.4591], shape=(5,), dtype=float32)\n",
      "Epoch [40/200], Loss: 0.6985009372181651\n",
      "tf.Tensor([ 2071.854   5170.479   4723.371   4726.104  -4282.7383], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  802.4185  2051.7893  1867.0168  1864.4971 -1601.4379], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  637.6488  1594.6498  1454.7625  1452.7947 -1267.0776], shape=(5,), dtype=float32)\n",
      "Epoch [41/200], Loss: 0.7117910629881484\n",
      "tf.Tensor([  637.5322  1594.6147  1455.0481  1453.2515 -1267.0608], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  801.9874  2051.6672  1868.0938  1866.2083 -1601.3837], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2071.0076  5169.41    4727.9805  4732.649  -4282.5815], shape=(5,), dtype=float32)\n",
      "Epoch [42/200], Loss: 0.7004338826091988\n",
      "tf.Tensor([  637.7006  1594.8973  1455.1494  1453.5356 -1267.1823], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  802.4482  2052.2085  1867.802   1865.8843 -1601.5714], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2072.3315  5171.1377  4726.394   4730.5693 -4283.0654], shape=(5,), dtype=float32)\n",
      "Epoch [43/200], Loss: 0.6924281487541927\n",
      "tf.Tensor([  802.72797  2052.5469   1867.5447   1865.4211  -1601.6295 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2072.4302  5171.491   4726.416   4730.0493 -4282.8945], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  637.9566  1595.342   1455.0051  1453.0466 -1267.1603], shape=(5,), dtype=float32)\n",
      "Epoch [44/200], Loss: 0.6894286879321437\n",
      "tf.Tensor([  802.45844  2052.537    1867.9884   1865.6556  -1601.3905 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2071.767   5171.0415  4727.985   4731.101  -4282.184 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  637.7347  1595.3286  1455.3926  1453.3232 -1266.9818], shape=(5,), dtype=float32)\n",
      "Epoch [45/200], Loss: 0.6857253333796169\n",
      "tf.Tensor([ 2071.5403  5171.0303  4728.7153  4731.4746 -4281.937 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  802.2598  2052.6567  1868.478   1865.905  -1601.2072], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  637.7612  1595.5118  1455.5266  1453.2788 -1266.9572], shape=(5,), dtype=float32)\n",
      "Epoch [46/200], Loss: 0.6846787810521088\n",
      "tf.Tensor([  802.4218  2052.914   1868.4368  1865.7361 -1601.2528], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2072.0918  5172.2046  4728.491   4730.6694 -4282.1245], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  637.95245  1595.8099   1455.5101   1453.2273  -1267.0216 ], shape=(5,), dtype=float32)\n",
      "Epoch [47/200], Loss: 0.6836634127609802\n",
      "tf.Tensor([  638.02484  1595.9159   1455.5105   1453.2677  -1267.0511 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2072.7312  5173.0986  4728.4834  4731.0063 -4282.389 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  802.8027  2053.5293  1868.5442  1866.0967 -1601.4149], shape=(5,), dtype=float32)\n",
      "Epoch [48/200], Loss: 0.6874764499031\n",
      "tf.Tensor([  638.1286  1596.1517  1455.7086  1453.7361 -1267.12  ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  802.8038  2053.661   1868.8375  1866.6943 -1601.4393], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2073.0593  5173.413   4730.0625  4733.821  -4282.5127], shape=(5,), dtype=float32)\n",
      "Epoch [49/200], Loss: 0.6823879526337039\n",
      "tf.Tensor([  802.79877  2053.7874   1869.1025   1867.1648  -1601.4415 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2072.9717  5173.5405  4730.7764  4734.674  -4282.4478], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  638.12805  1596.4138   1456.1719   1454.4358  -1267.1147 ], shape=(5,), dtype=float32)\n",
      "Epoch [50/200], Loss: 0.6854822090940312\n",
      "tf.Tensor([  638.1978  1596.5221  1456.1538  1454.3705 -1267.1337], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2073.4373  5174.57    4730.45    4733.9272 -4282.632 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  803.097   2054.3667  1869.1859  1867.023  -1601.5077], shape=(5,), dtype=float32)\n",
      "Epoch [51/200], Loss: 0.6857227546088346\n",
      "tf.Tensor([  803.1032  2054.4424  1869.2654  1867.0618 -1601.4951], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2073.4724  5175.0454  4730.968   4734.094  -4282.5503], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  638.2493  1596.8424  1456.439   1454.5035 -1267.1028], shape=(5,), dtype=float32)\n",
      "Epoch [52/200], Loss: 0.6852194796865437\n",
      "tf.Tensor([  638.23004  1596.8849   1456.541    1454.6016  -1267.0872 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2073.3352  5175.2324  4731.999   4734.987  -4282.382 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  803.0098  2054.7324  1869.8679  1867.6002 -1601.399 ], shape=(5,), dtype=float32)\n",
      "Epoch [53/200], Loss: 0.6833096645971382\n",
      "tf.Tensor([  638.34393  1597.1432   1456.6409   1454.6782  -1267.1156 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  803.15826  2054.987    1869.8887   1867.6113  -1601.4395 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2073.9387  5176.3276  4732.117   4735.042  -4282.56  ], shape=(5,), dtype=float32)\n",
      "Epoch [54/200], Loss: 0.6842000486016852\n",
      "tf.Tensor([  803.2     2055.1582  1870.0497  1867.813  -1601.4335], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2073.7124  5176.365   4732.952   4735.893  -4282.397 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  638.3394  1597.4183  1457.0547  1455.1233 -1267.0669], shape=(5,), dtype=float32)\n",
      "Epoch [55/200], Loss: 0.6840790493881203\n",
      "tf.Tensor([ 2073.457   5176.4795  4733.6777  4736.4907 -4282.2554], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  638.36066  1597.5535   1457.1887   1455.196   -1267.0581 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  803.18304  2055.517    1870.5847   1868.2202  -1601.3651 ], shape=(5,), dtype=float32)\n",
      "Epoch [56/200], Loss: 0.6833169721619066\n",
      "tf.Tensor([ 2073.857   5177.544   4733.4297  4735.9507 -4282.4585], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  803.29175  2055.7483   1870.664    1868.2437  -1601.3884 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  638.52155  1597.9092   1457.3256   1455.2576  -1267.0912 ], shape=(5,), dtype=float32)\n",
      "Epoch [57/200], Loss: 0.6824831462621264\n",
      "tf.Tensor([  638.5828  1598.011   1457.3428  1455.3076 -1267.1072], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2074.2595  5178.633   4733.656   4736.3857 -4282.61  ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  803.5252  2056.212   1870.8612  1868.6362 -1601.4424], shape=(5,), dtype=float32)\n",
      "Epoch [58/200], Loss: 0.684264085765563\n",
      "tf.Tensor([ 2074.2305  5178.8022  4734.405   4737.4937 -4282.5483], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  803.36017  2056.2358   1871.317    1869.2218  -1601.3549 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  638.51843  1598.2521   1457.9109   1456.1111  -1267.0471 ], shape=(5,), dtype=float32)\n",
      "Epoch [59/200], Loss: 0.6855640746123521\n",
      "tf.Tensor([  803.3085  2056.3464  1871.618   1869.5654 -1601.3234], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  638.6237  1598.448   1457.9657  1456.1783 -1267.0922], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2074.4841  5179.7476  4735.4277  4738.6343 -4282.65  ], shape=(5,), dtype=float32)\n",
      "Epoch [60/200], Loss: 0.6844675373383539\n",
      "tf.Tensor([  638.8659  1598.7483  1457.8376  1456.02   -1267.1898], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  803.89215  2057.085    1871.3323   1869.2263  -1601.5491 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2075.342   5180.974   4734.953   4738.1206 -4282.947 ], shape=(5,), dtype=float32)\n",
      "Epoch [61/200], Loss: 0.6882675022024106\n",
      "tf.Tensor([ 2075.088   5180.7856  4735.6875  4738.899  -4282.7354], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  638.77136  1598.9161   1458.2661   1456.5118  -1267.0868 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  803.47845  2057.0813   1872.2358   1870.242   -1601.2852 ], shape=(5,), dtype=float32)\n",
      "Epoch [62/200], Loss: 0.6857957355987375\n",
      "tf.Tensor([ 2074.2744  5180.2666  4737.8223  4740.897  -4282.098 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  638.6746  1599.0343  1458.5847  1456.7168 -1266.9912], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  803.62604  2057.4375   1872.295    1870.0161  -1601.2802 ], shape=(5,), dtype=float32)\n",
      "Epoch [63/200], Loss: 0.6860250617390805\n",
      "tf.Tensor([  638.9201  1599.3469  1458.4152  1456.3806 -1267.0668], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  804.01324  2057.8857   1871.9998   1869.5829  -1601.4054 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2075.6255  5182.707   4736.353   4738.611  -4282.611 ], shape=(5,), dtype=float32)\n",
      "Epoch [64/200], Loss: 0.6921909355164755\n",
      "tf.Tensor([  639.09    1599.6542  1458.4785  1456.5186 -1267.1095], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  803.96454  2058.077    1872.4609   1870.32    -1601.3656 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2075.2874  5182.454   4738.3896  4741.4404 -4282.3345], shape=(5,), dtype=float32)\n",
      "Epoch [65/200], Loss: 0.6784729790936329\n",
      "tf.Tensor([  803.7895  2058.0996  1872.9606  1871.0214 -1601.2863], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  638.886   1599.7458  1459.1677  1457.481  -1267.0197], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2075.1292  5182.76    4739.5454  4742.727  -4282.2847], shape=(5,), dtype=float32)\n",
      "Epoch [66/200], Loss: 0.6857040295753304\n",
      "tf.Tensor([  639.0445  1599.995   1459.1602  1457.4082 -1267.0872], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2075.75    5183.904   4738.8345  4741.6606 -4282.6357], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  804.2381  2058.855   1872.9951  1870.8271 -1601.4598], shape=(5,), dtype=float32)\n",
      "Epoch [67/200], Loss: 0.6837899002363538\n",
      "tf.Tensor([ 2075.8428  5184.4946  4738.9487  4741.451  -4282.693 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  639.1651  1600.3556  1459.3585  1457.4219 -1267.107 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  804.0694  2058.983   1873.5449  1871.3036 -1601.3478], shape=(5,), dtype=float32)\n",
      "Epoch [68/200], Loss: 0.682088786706258\n",
      "tf.Tensor([  804.0398  2059.0415  1873.699   1871.4729 -1601.3195], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2075.255   5184.688   4740.679   4743.0884 -4282.326 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  639.0794  1600.5461  1459.8186  1457.8628 -1267.0153], shape=(5,), dtype=float32)\n",
      "Epoch [69/200], Loss: 0.6812971404267278\n",
      "tf.Tensor([  804.08923  2059.3186   1873.9689   1871.6753  -1601.2799 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2075.433   5185.6465  4740.6924  4742.917  -4282.396 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  639.2392  1600.8563  1459.8912  1457.8796 -1267.0443], shape=(5,), dtype=float32)\n",
      "Epoch [70/200], Loss: 0.6791901739105679\n",
      "tf.Tensor([ 2075.5994  5186.3276  4740.6934  4742.8804 -4282.495 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  804.29974  2059.8047   1874.2021   1871.8783  -1601.318  ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  639.285   1601.0868  1460.1477  1458.1812 -1267.045 ], shape=(5,), dtype=float32)\n",
      "Epoch [71/200], Loss: 0.6811711814918567\n",
      "tf.Tensor([ 2075.544   5186.877   4741.5234  4743.985  -4282.496 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  804.3159  2060.0637  1874.6025  1872.4198 -1601.3055], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  639.3211  1601.3087  1460.4318  1458.5671 -1267.048 ], shape=(5,), dtype=float32)\n",
      "Epoch [72/200], Loss: 0.6802325529066681\n",
      "tf.Tensor([  804.4167  2060.3035  1874.7578  1872.6545 -1601.3406], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2075.8838  5187.9224  4742.1567  4744.9756 -4282.68  ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  639.4754  1601.6171  1460.5562  1458.7621 -1267.101 ], shape=(5,), dtype=float32)\n",
      "Epoch [73/200], Loss: 0.6789787603753811\n",
      "tf.Tensor([  639.55914  1601.7451   1460.5538   1458.783   -1267.1284 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  804.81244  2060.9285   1874.7935   1872.823   -1601.4718 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2076.8525  5189.3574  4742.124   4745.3374 -4283.0034], shape=(5,), dtype=float32)\n",
      "Epoch [74/200], Loss: 0.6846813110814468\n",
      "tf.Tensor([  804.7969  2061.078   1875.068   1873.2512 -1601.4315], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2076.348   5188.945   4743.7524  4747.1343 -4282.569 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  639.44086  1601.9786   1461.1611   1459.5576  -1267.0004 ], shape=(5,), dtype=float32)\n",
      "Epoch [75/200], Loss: 0.6832345325236755\n",
      "tf.Tensor([ 2075.917   5188.815   4744.872   4747.9106 -4282.191 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  639.46405  1602.1382   1461.2639   1459.4836  -1266.9645 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  804.67426  2061.4253   1875.6748   1873.4856  -1601.2404 ], shape=(5,), dtype=float32)\n",
      "Epoch [76/200], Loss: 0.6827628807062407\n",
      "tf.Tensor([  804.83215  2061.6326   1875.5723   1873.2611  -1601.2865 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2076.8213  5190.6753  4743.9507  4745.7583 -4282.484 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  639.7071  1602.599   1461.2874  1459.2358 -1267.016 ], shape=(5,), dtype=float32)\n",
      "Epoch [77/200], Loss: 0.6823999139987458\n",
      "tf.Tensor([ 2076.6157  5190.7266  4745.003   4746.7974 -4282.35  ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  639.63544  1602.6857   1461.6038   1459.614   -1266.9866 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  804.7516  2062.0127  1876.3535  1874.115  -1601.2349], shape=(5,), dtype=float32)\n",
      "Epoch [78/200], Loss: 0.6796362766743798\n",
      "tf.Tensor([  804.8111  2062.1438  1876.4344  1874.2576 -1601.2649], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2076.8606  5191.4673  4746.2856  4748.518  -4282.47  ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  639.7856  1603.0721  1461.8835  1460.023  -1267.0548], shape=(5,), dtype=float32)\n",
      "Epoch [79/200], Loss: 0.6781824478363189\n",
      "tf.Tensor([  805.044   2062.5762  1876.5664  1874.4413 -1601.3485], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  639.9826  1603.3531  1461.8596  1460.042  -1267.1274], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2077.8496  5193.1816  4745.9463  4748.486  -4282.9204], shape=(5,), dtype=float32)\n",
      "Epoch [80/200], Loss: 0.680671640688419\n",
      "tf.Tensor([  640.1253  1603.5927  1461.9067  1460.2134 -1267.1672], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2078.0469  5193.551   4746.513   4749.504  -4282.875 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  805.3038  2063.1963  1876.9386  1875.21   -1601.3717], shape=(5,), dtype=float32)\n",
      "Epoch [81/200], Loss: 0.6782643034726812\n",
      "tf.Tensor([  805.1822  2063.1926  1877.2097  1875.5303 -1601.2958], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  639.9392  1603.7283  1462.5288  1461.0258 -1267.0162], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2077.6047  5193.5977  4748.605   4751.732  -4282.39  ], shape=(5,), dtype=float32)\n",
      "Epoch [82/200], Loss: 0.6811968624881133\n",
      "tf.Tensor([  805.2436  2063.5105  1877.4617  1875.6365 -1601.2734], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2077.8267  5194.424   4748.3716  4750.798  -4282.4766], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  640.1059  1604.1492  1462.6313  1460.7461 -1267.0355], shape=(5,), dtype=float32)\n",
      "Epoch [83/200], Loss: 0.6767882460588258\n",
      "tf.Tensor([ 2077.8604  5195.1577  4748.3286  4750.001  -4282.53  ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  805.3514  2063.9795  1877.7343  1875.3479 -1601.2592], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  640.0524  1604.3368  1462.9747  1460.9016 -1266.987 ], shape=(5,), dtype=float32)\n",
      "Epoch [84/200], Loss: 0.6804409455989976\n",
      "tf.Tensor([ 2077.4321  5195.476   4749.5933  4751.0015 -4282.336 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  640.0445  1604.4766  1463.2064  1461.1665 -1266.9672], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  805.3393  2064.3416  1878.316   1876.0027 -1601.2136], shape=(5,), dtype=float32)\n",
      "Epoch [85/200], Loss: 0.6776088867671269\n",
      "tf.Tensor([ 2077.7073  5196.36    4750.0747  4751.8247 -4282.4507], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  640.1944  1604.8046  1463.3816  1461.4746 -1267.0109], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  805.55975  2064.7793   1878.5095   1876.387   -1601.2794 ], shape=(5,), dtype=float32)\n",
      "Epoch [86/200], Loss: 0.6768799887755318\n",
      "tf.Tensor([  640.3685  1605.0763  1463.4182  1461.6416 -1267.0745], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  805.84955  2065.1724   1878.478    1876.5615  -1601.3881 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2078.8733  5198.272   4750.261   4753.1333 -4282.931 ], shape=(5,), dtype=float32)\n",
      "Epoch [87/200], Loss: 0.6804106461727487\n",
      "tf.Tensor([ 2078.6553  5198.1406  4751.047   4754.1143 -4282.7617], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  640.3394  1605.3326  1463.924   1462.438  -1267.018 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  805.57294  2065.3254   1879.3834   1877.7417  -1601.2021 ], shape=(5,), dtype=float32)\n",
      "Epoch [88/200], Loss: 0.6813476709724474\n",
      "tf.Tensor([ 2078.1865  5198.1533  4752.708   4755.5923 -4282.3604], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  805.6806  2065.603   1879.4448  1877.5277 -1601.2039], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  640.45953  1605.7305   1464.091    1462.2303  -1267.0011 ], shape=(5,), dtype=float32)\n",
      "Epoch [89/200], Loss: 0.6766254576622832\n",
      "tf.Tensor([  805.97833  2066.0232   1879.2517   1876.9507  -1601.2808 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  640.691   1606.0522  1463.9667  1461.925  -1267.0619], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2079.2043  5200.7666  4751.3564  4752.754  -4282.76  ], shape=(5,), dtype=float32)\n",
      "Epoch [90/200], Loss: 0.6879216746661144\n",
      "tf.Tensor([ 2078.869   5200.4863  4752.423   4754.099  -4282.5444], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  640.4024  1606.0537  1464.6951  1462.9077 -1266.9233], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  805.5479  2066.1658  1880.5676  1878.6931 -1601.0771], shape=(5,), dtype=float32)\n",
      "Epoch [91/200], Loss: 0.6877878168718391\n",
      "tf.Tensor([ 2077.9778  5199.742   4755.7085  4758.1284 -4282.1396], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  640.44135  1606.3207   1465.0337   1463.3025  -1266.9761 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  806.09735  2066.8857   1880.3195   1878.2205  -1601.3285 ], shape=(5,), dtype=float32)\n",
      "Epoch [92/200], Loss: 0.6866522302018524\n",
      "tf.Tensor([ 2079.5298  5202.401   4753.5396  4755.2056 -4283.0747], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  806.37195  2067.2898   1880.2502   1878.0348  -1601.4355 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  640.8299  1606.9215  1464.9843  1463.1099 -1267.1251], shape=(5,), dtype=float32)\n",
      "Epoch [93/200], Loss: 0.6834448778478167\n",
      "tf.Tensor([ 2079.2356  5202.6143  4755.0273  4756.973  -4282.825 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  640.7288  1606.9886  1465.3324  1463.6073 -1267.0409], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  806.15265  2067.4895   1881.0955   1879.2307  -1601.2479 ], shape=(5,), dtype=float32)\n",
      "Epoch [94/200], Loss: 0.6771289187914146\n",
      "tf.Tensor([  640.8012  1607.188   1465.4634  1463.8589 -1267.0355], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2079.7266  5203.561   4755.9565  4758.556  -4282.748 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  806.48914  2068.0251   1881.0869   1879.3376  -1601.3304 ], shape=(5,), dtype=float32)\n",
      "Epoch [95/200], Loss: 0.6769881278116179\n",
      "tf.Tensor([ 2079.957   5204.124   4756.24    4758.7524 -4282.7227], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  806.4     2068.153   1881.4275  1879.596  -1601.2435], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  640.8637  1607.615   1465.8618  1464.1758 -1266.9768], shape=(5,), dtype=float32)\n",
      "Epoch [96/200], Loss: 0.677238487433535\n",
      "tf.Tensor([ 2079.551   5204.3774  4757.552   4759.487  -4282.399 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  806.36487  2068.4246   1881.8152   1879.7358  -1601.175  ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  640.93494  1607.9049   1466.0493   1464.1478  -1266.9695 ], shape=(5,), dtype=float32)\n",
      "Epoch [97/200], Loss: 0.6742633852135121\n",
      "tf.Tensor([ 2079.8408  5205.517   4757.581   4758.8433 -4282.5195], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  806.5464  2068.8596  1881.9783  1879.71   -1601.2133], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  641.0227  1608.2024  1466.2683  1464.3198 -1266.9814], shape=(5,), dtype=float32)\n",
      "Epoch [98/200], Loss: 0.6758104663699518\n",
      "tf.Tensor([ 2079.8972  5206.1895  4758.445   4759.822  -4282.5024], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  806.56396  2069.159    1882.4221   1880.3027  -1601.1866 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  641.049   1608.4464  1466.6101  1464.809  -1266.9688], shape=(5,), dtype=float32)\n",
      "Epoch [99/200], Loss: 0.6755775327606846\n",
      "tf.Tensor([  641.14734  1608.5952   1466.623    1464.8914  -1267.0092 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  806.9149  2069.7075  1882.5013  1880.646  -1601.3253], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2081.093   5208.0435  4758.9546  4761.3594 -4282.9805], shape=(5,), dtype=float32)\n",
      "Epoch [100/200], Loss: 0.6785774958833325\n",
      "tf.Tensor([  807.0232  2069.9783  1882.709   1881.0625 -1601.3699], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  641.3512  1609.0476  1466.9069  1465.4841 -1267.0984], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2081.026   5208.154   4760.7466  4763.5913 -4282.806 ], shape=(5,), dtype=float32)\n",
      "Epoch [101/200], Loss: 0.6747847498622036\n",
      "tf.Tensor([ 2080.9958  5208.333   4761.0103  4763.7036 -4282.6924], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  806.9551  2070.2268  1883.228   1881.6598 -1601.2954], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  641.375   1609.2351  1467.0979  1465.669  -1267.0686], shape=(5,), dtype=float32)\n",
      "Epoch [102/200], Loss: 0.6747980935893043\n",
      "tf.Tensor([ 2080.9814  5208.43    4761.0024  4763.559  -4282.657 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  641.3897  1609.2626  1467.0889  1465.625  -1267.0651], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  806.99133  2070.2961   1883.2069   1881.551   -1601.2858 ], shape=(5,), dtype=float32)\n",
      "Epoch [103/200], Loss: 0.6739599456773752\n",
      "tf.Tensor([ 2081.0479  5208.62    4760.856   4763.2466 -4282.6636], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  641.4252  1609.3146  1467.0586  1465.5359 -1267.0658], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  807.0369  2070.3625  1883.1678  1881.4355 -1601.2874], shape=(5,), dtype=float32)\n",
      "Epoch [104/200], Loss: 0.6731672610893317\n",
      "tf.Tensor([  807.0525  2070.385   1883.1555  1881.4001 -1601.2892], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2081.1284  5208.867   4760.68    4762.8403 -4282.679 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  641.4596  1609.3739  1467.0375  1465.4407 -1267.0653], shape=(5,), dtype=float32)\n",
      "Epoch [105/200], Loss: 0.6730376461540971\n",
      "tf.Tensor([ 2081.1248  5208.9434  4760.6685  4762.7246 -4282.6694], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  641.464   1609.3939  1467.0453  1465.419  -1267.0605], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  807.0747  2070.455   1883.17    1881.316  -1601.2777], shape=(5,), dtype=float32)\n",
      "Epoch [106/200], Loss: 0.6732833359092676\n",
      "tf.Tensor([  807.0768  2070.4673  1883.1777  1881.3125 -1601.2754], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  641.46985  1609.4233   1467.0636   1465.4102  -1267.0553 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2081.126   5209.098   4760.722   4762.636  -4282.6465], shape=(5,), dtype=float32)\n",
      "Epoch [107/200], Loss: 0.6734232394236711\n",
      "tf.Tensor([  807.07733  2070.4983   1883.2145   1881.3303  -1601.2673 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2081.0823  5209.107   4760.832   4762.716  -4282.6177], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  641.4461  1609.4377  1467.1333  1465.4639 -1267.0377], shape=(5,), dtype=float32)\n",
      "Epoch [108/200], Loss: 0.6735287284850985\n",
      "tf.Tensor([  641.43994  1609.4415   1467.1523   1465.4822  -1267.0337 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  807.0419  2070.5134  1883.3148  1881.4226 -1601.2443], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2081.0244  5209.135   4761.046   4762.9185 -4282.574 ], shape=(5,), dtype=float32)\n",
      "Epoch [109/200], Loss: 0.6729354760945432\n",
      "tf.Tensor([  641.4374  1609.4641  1467.1913  1465.5267 -1267.0287], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2081.009   5209.164   4761.1387  4763.015  -4282.5605], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  807.03046  2070.5476   1883.3911   1881.5059  -1601.2329 ], shape=(5,), dtype=float32)\n",
      "Epoch [110/200], Loss: 0.6728445351341827\n",
      "tf.Tensor([ 2080.9648  5209.1753  4761.256   4763.1255 -4282.5366], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  807.00415  2070.5496   1883.4535   1881.5613  -1601.2188 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  641.40076  1609.4792   1467.296    1465.6239  -1267.0072 ], shape=(5,), dtype=float32)\n",
      "Epoch [111/200], Loss: 0.6733199036206491\n",
      "tf.Tensor([  806.98584  2070.5571   1883.5061   1881.6056  -1601.2084 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  641.39844  1609.4941   1467.3236   1465.6472  -1267.0051 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2080.881   5209.2437  4761.4907  4763.313  -4282.503 ], shape=(5,), dtype=float32)\n",
      "Epoch [112/200], Loss: 0.6730631011822675\n",
      "tf.Tensor([ 2080.8838  5209.2783  4761.5073  4763.32   -4282.5063], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  641.408   1609.5272  1467.3485  1465.6625 -1267.0068], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  807.0068  2070.6272  1883.5588  1881.6384 -1601.2119], shape=(5,), dtype=float32)\n",
      "Epoch [113/200], Loss: 0.6729844239648967\n",
      "tf.Tensor([  641.42267  1609.5558   1467.3552   1465.6621  -1267.0114 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2080.9363  5209.4644  4761.502   4763.277  -4282.5405], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  807.04663  2070.69     1883.5579   1881.6287  -1601.2257 ], shape=(5,), dtype=float32)\n",
      "Epoch [114/200], Loss: 0.673016397184729\n",
      "tf.Tensor([  641.4525  1609.6042  1467.3564  1465.6567 -1267.0217], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2081.0005  5209.6216  4761.476   4763.238  -4282.5767], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  807.07947  2070.748    1883.5669   1881.6321  -1601.2367 ], shape=(5,), dtype=float32)\n",
      "Epoch [115/200], Loss: 0.6729678775339721\n",
      "tf.Tensor([  641.475   1609.6467  1467.368   1465.6653 -1267.0289], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2081.0405  5209.7485  4761.4946  4763.2534 -4282.599 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  807.09924  2070.7954   1883.5931   1881.6588  -1601.2418 ], shape=(5,), dtype=float32)\n",
      "Epoch [116/200], Loss: 0.6729195779352587\n",
      "tf.Tensor([  807.09705  2070.8047   1883.6124   1881.6782  -1601.2399 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2081.0107  5209.809   4761.614   4763.3716 -4282.589 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  641.46936  1609.6849   1467.4398   1465.7368  -1267.0226 ], shape=(5,), dtype=float32)\n",
      "Epoch [117/200], Loss: 0.6729858050385991\n",
      "tf.Tensor([  641.4687  1609.6929  1467.4542  1465.7528 -1267.0215], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  807.0875  2070.8398  1883.6918  1881.7631 -1601.2318], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2081.01    5209.911   4761.7466  4763.528  -4282.59  ], shape=(5,), dtype=float32)\n",
      "Epoch [118/200], Loss: 0.672799988417669\n",
      "tf.Tensor([  807.0945  2070.8672  1883.7181  1881.7963 -1601.2333], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2080.983   5209.941   4761.8384  4763.6206 -4282.5776], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  641.46924  1609.7355   1467.5205   1465.8264  -1267.0181 ], shape=(5,), dtype=float32)\n",
      "Epoch [119/200], Loss: 0.6728802673113156\n",
      "tf.Tensor([  807.0765  2070.886   1883.7893  1881.8645 -1601.2216], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2080.9336  5209.9863  4761.9775  4763.7495 -4282.557 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  641.4627  1609.7565  1467.5667  1465.8691 -1267.0122], shape=(5,), dtype=float32)\n",
      "Epoch [120/200], Loss: 0.672820686036434\n",
      "tf.Tensor([  807.0736  2070.9163  1883.8413  1881.9109 -1601.2157], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  641.4718  1609.7804  1467.5818  1465.883  -1267.014 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2080.961   5210.134   4762.0386  4763.8037 -4282.5737], shape=(5,), dtype=float32)\n",
      "Epoch [121/200], Loss: 0.6727679637129165\n",
      "tf.Tensor([ 2080.9722  5210.1763  4762.045   4763.807  -4282.5796], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  641.4901  1609.8207  1467.5978  1465.8958 -1267.0186], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  807.1141  2071.003   1883.8752  1881.939  -1601.2255], shape=(5,), dtype=float32)\n",
      "Epoch [122/200], Loss: 0.6726427977526073\n",
      "tf.Tensor([  641.5061  1609.8505  1467.6042  1465.9014 -1267.0223], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  807.1447  2071.048   1883.8716  1881.9384 -1601.2357], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2081.0764  5210.425   4762.03    4763.7974 -4282.628 ], shape=(5,), dtype=float32)\n",
      "Epoch [123/200], Loss: 0.6729116110552796\n",
      "tf.Tensor([  641.5392  1609.9014  1467.605   1465.9077 -1267.0338], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  807.1809  2071.1086  1883.88    1881.9548 -1601.2474], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2081.1377  5210.557   4762.0474  4763.8384 -4282.6533], shape=(5,), dtype=float32)\n",
      "Epoch [124/200], Loss: 0.6728259301267637\n",
      "tf.Tensor([ 2081.125   5210.5728  4762.097   4763.89   -4282.646 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  641.54376  1609.9402   1467.6531   1465.9629  -1267.0314 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  807.17004  2071.1458   1883.9619   1882.0444  -1601.2362 ], shape=(5,), dtype=float32)\n",
      "Epoch [125/200], Loss: 0.6727216798901203\n",
      "tf.Tensor([  807.1664  2071.1536  1883.9834  1882.0687 -1601.2327], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2081.046   5210.606   4762.3325  4764.1313 -4282.602 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  641.5223  1609.959   1467.7322  1466.0452 -1267.0173], shape=(5,), dtype=float32)\n",
      "Epoch [126/200], Loss: 0.6727381672396353\n",
      "tf.Tensor([  641.5227  1609.9681  1467.7452  1466.0598 -1267.0162], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2081.0369  5210.674   4762.446   4764.2524 -4282.5933], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  807.16406  2071.2083   1884.0717   1882.1644  -1601.2244 ], shape=(5,), dtype=float32)\n",
      "Epoch [127/200], Loss: 0.6725971448667498\n",
      "tf.Tensor([  807.1658  2071.221   1884.0864  1882.1787 -1601.2235], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  641.53937  1610.0164   1467.7787   1466.097   -1267.0193 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2081.0723  5210.814   4762.526   4764.333  -4282.6055], shape=(5,), dtype=float32)\n",
      "Epoch [128/200], Loss: 0.6725395662801604\n",
      "tf.Tensor([  807.1841  2071.2683  1884.1155  1882.2063 -1601.2279], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  641.55396  1610.0537   1467.8005   1466.1166  -1267.0228 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2081.1055  5210.929   4762.57    4764.3687 -4282.6196], shape=(5,), dtype=float32)\n",
      "Epoch [129/200], Loss: 0.6725062652369282\n",
      "tf.Tensor([ 2081.1064  5210.961   4762.5933  4764.3853 -4282.62  ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  641.56146  1610.087    1467.8301   1466.1407  -1267.0219 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  807.2014  2071.3389  1884.1759  1882.2556 -1601.2262], shape=(5,), dtype=float32)\n",
      "Epoch [130/200], Loss: 0.6724836053093736\n",
      "tf.Tensor([  807.2055  2071.3535  1884.1875  1882.2654 -1601.2263], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  641.57153  1610.1216   1467.8568   1466.1628  -1267.0221 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2081.1296  5211.1333  4762.694   4764.4604 -4282.6255], shape=(5,), dtype=float32)\n",
      "Epoch [131/200], Loss: 0.6724588238644559\n",
      "tf.Tensor([  807.2266  2071.404   1884.213   1882.2886 -1601.2313], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2081.1265  5211.19    4762.755   4764.5093 -4282.6226], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  641.57684  1610.1617   1467.9021   1466.2021  -1267.0194 ], shape=(5,), dtype=float32)\n",
      "Epoch [132/200], Loss: 0.6725051196889517\n",
      "tf.Tensor([  641.58044  1610.1735   1467.9109   1466.2106  -1267.0197 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  807.2384  2071.4592  1884.2661  1882.3378 -1601.2294], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2081.1768  5211.345   4762.817   4764.574  -4282.639 ], shape=(5,), dtype=float32)\n",
      "Epoch [133/200], Loss: 0.6725933280600943\n",
      "tf.Tensor([  807.2539  2071.4934  1884.2821  1882.3572 -1601.233 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  641.6059  1610.2291  1467.9354  1466.2405 -1267.0262], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2081.194   5211.4385  4762.898   4764.6597 -4282.642 ], shape=(5,), dtype=float32)\n",
      "Epoch [134/200], Loss: 0.6723694945065813\n",
      "tf.Tensor([  641.615   1610.254   1467.9517  1466.2606 -1267.0278], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2081.222   5211.5137  4762.935   4764.7104 -4282.648 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  807.27734  2071.5698   1884.3423   1882.4281  -1601.2346 ], shape=(5,), dtype=float32)\n",
      "Epoch [135/200], Loss: 0.6723676090690013\n",
      "tf.Tensor([ 2081.2065  5211.554   4763.0225  4764.7983 -4282.635 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  807.25806  2071.5789   1884.3988   1882.4819  -1601.2213 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  641.5981  1610.2878  1468.0393  1466.3483 -1267.0122], shape=(5,), dtype=float32)\n",
      "Epoch [136/200], Loss: 0.6726645101849783\n",
      "tf.Tensor([  807.2434  2071.591   1884.451   1882.5305 -1601.2115], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  641.5991  1610.307   1468.0658  1466.3745 -1267.0106], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2081.1548  5211.6445  4763.2544  4765.0127 -4282.6016], shape=(5,), dtype=float32)\n",
      "Epoch [137/200], Loss: 0.6723577087941123\n",
      "tf.Tensor([  641.6149  1610.3372  1468.0742  1466.3851 -1267.0156], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  807.28326  2071.6682   1884.4739   1882.5594  -1601.2236 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2081.2415  5211.7993  4763.25    4765.019  -4282.636 ], shape=(5,), dtype=float32)\n",
      "Epoch [138/200], Loss: 0.6724789938396823\n",
      "tf.Tensor([  641.6438  1610.387   1468.0812  1466.3953 -1267.025 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2081.2803  5211.8896  4763.268   4765.0386 -4282.65  ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  807.3198  2071.7434  1884.5     1882.5879 -1601.2328], shape=(5,), dtype=float32)\n",
      "Epoch [139/200], Loss: 0.6723143044130883\n",
      "tf.Tensor([  807.31866  2071.755    1884.5188   1882.6052  -1601.2305 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  641.6548  1610.4327  1468.1227  1466.4355 -1267.0244], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2081.289   5212.007   4763.3926  4765.154  -4282.6465], shape=(5,), dtype=float32)\n",
      "Epoch [140/200], Loss: 0.6722121699641114\n",
      "tf.Tensor([  807.3241  2071.7944  1884.5646  1882.6509 -1601.2284], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  641.6585  1610.4637  1468.1592  1466.4719 -1267.0226], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2081.2935  5212.0903  4763.4956  4765.253  -4282.642 ], shape=(5,), dtype=float32)\n",
      "Epoch [141/200], Loss: 0.6721812639221381\n",
      "tf.Tensor([ 2081.285   5212.112   4763.5386  4765.2925 -4282.6353], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  807.3153  2071.8357  1884.6445  1882.7258 -1601.2168], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  641.6437  1610.4907  1468.2307  1466.5363 -1267.0095], shape=(5,), dtype=float32)\n",
      "Epoch [142/200], Loss: 0.6724744669153259\n",
      "tf.Tensor([  641.64636  1610.5023   1468.241    1466.5461  -1267.0094 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  807.3243  2071.8792  1884.6864  1882.7651 -1601.2151], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2081.293   5212.262   4763.691   4765.4243 -4282.628 ], shape=(5,), dtype=float32)\n",
      "Epoch [143/200], Loss: 0.6723749755387759\n",
      "tf.Tensor([  641.67664  1610.5533   1468.2471   1466.5557  -1267.0192 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2081.3374  5212.358   4763.7036  4765.439  -4282.6436], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  807.36536  2071.9587   1884.7085   1882.7898  -1601.2262 ], shape=(5,), dtype=float32)\n",
      "Epoch [144/200], Loss: 0.672204054019021\n",
      "tf.Tensor([  807.36566  2071.972    1884.7258   1882.8054  -1601.2245 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2081.3289  5212.439   4763.8105  4765.528  -4282.634 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  641.68054  1610.6046   1468.3113   1466.613   -1267.0138 ], shape=(5,), dtype=float32)\n",
      "Epoch [145/200], Loss: 0.6722333852231935\n",
      "tf.Tensor([  641.68274  1610.6161   1468.3218   1466.623   -1267.0132 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2081.3374  5212.533   4763.9     4765.6084 -4282.631 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  807.3761  2072.0403  1884.8011  1882.8755 -1601.2192], shape=(5,), dtype=float32)\n",
      "Epoch [146/200], Loss: 0.6721652264976926\n",
      "tf.Tensor([  807.37805  2072.054    1884.8167   1882.8901  -1601.2181 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  641.70325  1610.67     1468.3538   1466.6564  -1267.0167 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2081.3784  5212.681   4763.989   4765.695  -4282.641 ], shape=(5,), dtype=float32)\n",
      "Epoch [147/200], Loss: 0.6720614438068151\n",
      "tf.Tensor([  641.71655  1610.6993   1468.3665   1466.6711  -1267.0203 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2081.4192  5212.771   4764.012   4765.726  -4282.654 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  807.41455  2072.143    1884.8646   1882.9446  -1601.2258 ], shape=(5,), dtype=float32)\n",
      "Epoch [148/200], Loss: 0.6720904431025388\n",
      "tf.Tensor([  641.73126  1610.74     1468.3922   1466.7014  -1267.0221 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2081.4512  5212.8794  4764.085   4765.81   -4282.658 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  807.42847  2072.191    1884.9036   1882.9901  -1601.2257 ], shape=(5,), dtype=float32)\n",
      "Epoch [149/200], Loss: 0.6720266978036845\n",
      "tf.Tensor([  641.7401  1610.7756  1468.4248  1466.7395 -1267.0212], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  807.4381  2072.2224  1884.929   1883.0215 -1601.2267], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2081.489   5213.0117  4764.201   4765.9473 -4282.662 ], shape=(5,), dtype=float32)\n",
      "Epoch [150/200], Loss: 0.6720183013588197\n",
      "tf.Tensor([ 2081.4722  5213.0244  4764.262   4766.0054 -4282.6514], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  641.7376  1610.8125  1468.4861  1466.8047 -1267.0148], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  807.42163  2072.26     1885.0222   1883.1157  -1601.2113 ], shape=(5,), dtype=float32)\n",
      "Epoch [151/200], Loss: 0.6720663507363486\n",
      "tf.Tensor([  807.41956  2072.271    1885.0427   1883.136   -1601.2086 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  641.73303  1610.8385   1468.534    1466.8516  -1267.0087 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2081.434   5213.129   4764.4976  4766.2227 -4282.6206], shape=(5,), dtype=float32)\n",
      "Epoch [152/200], Loss: 0.6719657742173931\n",
      "tf.Tensor([  641.74524  1610.8673   1468.5488   1466.8665  -1267.0121 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2081.4766  5213.223   4764.516   4766.2417 -4282.636 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  807.45483  2072.36     1885.0923   1883.1843  -1601.2162 ], shape=(5,), dtype=float32)\n",
      "Epoch [153/200], Loss: 0.6719852611437446\n",
      "tf.Tensor([ 2081.481   5213.2905  4764.571   4766.281  -4282.633 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  641.7555  1610.9154  1468.5919  1466.9016 -1267.0096], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  807.4524  2072.3967  1885.1472  1883.2268 -1601.2076], shape=(5,), dtype=float32)\n",
      "Epoch [154/200], Loss: 0.6719236028862507\n",
      "tf.Tensor([  641.7647  1610.9423  1468.6084  1466.9144 -1267.0105], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2081.516   5213.449   4764.65    4766.3335 -4282.641 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  807.48456  2072.4595   1885.1633   1883.2405  -1601.2164 ], shape=(5,), dtype=float32)\n",
      "Epoch [155/200], Loss: 0.6719690690838278\n",
      "tf.Tensor([  641.78845  1610.9905   1468.6233   1466.9282  -1267.0168 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  807.5065  2072.501   1885.1746  1883.2528 -1601.2223], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2081.6055  5213.642   4764.687   4766.371  -4282.674 ], shape=(5,), dtype=float32)\n",
      "Epoch [156/200], Loss: 0.672028514951991\n",
      "tf.Tensor([  641.81213  1611.0378   1468.6399   1466.9482  -1267.0239 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  807.53186  2072.5579   1885.2015   1883.2856  -1601.2291 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2081.6504  5213.758   4764.758   4766.4556 -4282.686 ], shape=(5,), dtype=float32)\n",
      "Epoch [157/200], Loss: 0.6719056286203428\n",
      "tf.Tensor([  641.82446  1611.0768   1468.6708   1466.9865  -1267.026  ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2081.654   5213.81    4764.841   4766.5503 -4282.679 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  807.5371  2072.6125  1885.2727  1883.3696 -1601.2242], shape=(5,), dtype=float32)\n",
      "Epoch [158/200], Loss: 0.6717203557916367\n",
      "tf.Tensor([  641.82025  1611.1038   1468.7208   1467.0436  -1267.0194 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  807.5373  2072.638   1885.3113  1883.4153 -1601.2208], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2081.6519  5213.904   4765.028   4766.7593 -4282.662 ], shape=(5,), dtype=float32)\n",
      "Epoch [159/200], Loss: 0.671681033880143\n",
      "tf.Tensor([ 2081.6282  5213.9106  4765.0977  4766.8247 -4282.6475], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  807.51294  2072.6582   1885.3967   1883.499   -1601.204  ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  641.792   1611.1332  1468.8276  1467.148  -1266.9994], shape=(5,), dtype=float32)\n",
      "Epoch [160/200], Loss: 0.6722083735589849\n",
      "tf.Tensor([  641.7922  1611.1434  1468.8417  1467.1609 -1266.998 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2081.5613  5213.974   4765.3237  4767.015  -4282.605 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  807.51874  2072.7148   1885.4637   1883.5579  -1601.1986 ], shape=(5,), dtype=float32)\n",
      "Epoch [161/200], Loss: 0.6719065452155345\n",
      "tf.Tensor([  641.81604  1611.1924   1468.857    1467.1731  -1267.0042 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  807.54614  2072.762    1885.468    1883.5581  -1601.2073 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2081.6714  5214.196   4765.32    4766.9907 -4282.65  ], shape=(5,), dtype=float32)\n",
      "Epoch [162/200], Loss: 0.6719663161929189\n",
      "tf.Tensor([ 2081.674   5214.233   4765.346   4767.0034 -4282.65  ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  807.5571  2072.809   1885.5085  1883.583  -1601.2062], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  641.8331  1611.2567  1468.907   1467.2035 -1267.0043], shape=(5,), dtype=float32)\n",
      "Epoch [163/200], Loss: 0.6718489058399434\n",
      "tf.Tensor([  641.839   1611.2712  1468.9142  1467.2083 -1267.0052], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  807.5782  2072.8645  1885.5382  1883.6023 -1601.2096], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2081.721   5214.441   4765.4414  4767.0522 -4282.6636], shape=(5,), dtype=float32)\n",
      "Epoch [164/200], Loss: 0.6719432086979271\n",
      "tf.Tensor([  641.8767  1611.3307  1468.9147  1467.2102 -1267.0184], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2081.772   5214.5435  4765.4546  4767.069  -4282.682 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  807.624   2072.9517  1885.5608  1883.6295 -1601.2224], shape=(5,), dtype=float32)\n",
      "Epoch [165/200], Loss: 0.671730605881236\n",
      "tf.Tensor([  807.62195  2072.9631   1885.5822   1883.6514  -1601.2194 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2081.7515  5214.612   4765.6006  4767.2114 -4282.664 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  641.87286  1611.3789   1468.9946   1467.2915  -1267.0094 ], shape=(5,), dtype=float32)\n",
      "Epoch [166/200], Loss: 0.6718005411222806\n",
      "tf.Tensor([  807.59705  2072.983    1885.6704   1883.7385  -1601.203  ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  641.8716  1611.3983  1469.0271  1467.3267 -1267.0065], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2081.734   5214.7046  4765.796   4767.4126 -4282.644 ], shape=(5,), dtype=float32)\n",
      "Epoch [167/200], Loss: 0.6715645708888586\n",
      "tf.Tensor([  807.6141  2073.0347  1885.71    1883.7864 -1601.2062], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  641.8861  1611.4401  1469.0565  1467.3616 -1267.0092], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2081.7744  5214.8237  4765.8687  4767.4966 -4282.654 ], shape=(5,), dtype=float32)\n",
      "Epoch [168/200], Loss: 0.6715453567684183\n",
      "tf.Tensor([ 2081.7773  5214.857   4765.901   4767.529  -4282.652 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  641.8937  1611.4769  1469.092   1467.3984 -1267.0067], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  807.6325  2073.115   1885.7842  1883.8638 -1601.202 ], shape=(5,), dtype=float32)\n",
      "Epoch [169/200], Loss: 0.6715390516665933\n",
      "tf.Tensor([  807.6382  2073.1323  1885.7965  1883.8762 -1601.2021], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2081.775   5214.9844  4766.041   4767.655  -4282.6367], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  641.8989  1611.5228  1469.1455  1467.4473 -1267.0018], shape=(5,), dtype=float32)\n",
      "Epoch [170/200], Loss: 0.6715340802553067\n",
      "tf.Tensor([  807.64    2073.173   1885.8506  1883.9229 -1601.1962], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2081.7727  5215.0835  4766.141   4767.7334 -4282.6294], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  641.9061  1611.5594  1469.1815  1467.4773 -1266.9998], shape=(5,), dtype=float32)\n",
      "Epoch [171/200], Loss: 0.6714585827800527\n",
      "tf.Tensor([  807.6526  2073.223   1885.893   1883.9575 -1601.1952], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2081.7927  5215.2046  4766.2114  4767.7837 -4282.634 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  641.91974  1611.6014   1469.2104   1467.5007  -1267.0011 ], shape=(5,), dtype=float32)\n",
      "Epoch [172/200], Loss: 0.6713867788519002\n",
      "tf.Tensor([ 2081.8047  5215.286   4766.2583  4767.819  -4282.636 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  641.93054  1611.6311   1469.2274   1467.5157  -1267.0018 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  807.6898  2073.319   1885.9458  1884.0037 -1601.1998], shape=(5,), dtype=float32)\n",
      "Epoch [173/200], Loss: 0.6713418200789958\n",
      "tf.Tensor([ 2081.865   5215.4404  4766.2847  4767.848  -4282.6553], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  807.7002  2073.3542  1885.9727  1884.0308 -1601.1996], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  641.9486  1611.6879  1469.2682  1467.5571 -1267.0027], shape=(5,), dtype=float32)\n",
      "Epoch [174/200], Loss: 0.6714427762851365\n",
      "tf.Tensor([ 2081.8628  5215.536   4766.397   4767.956  -4282.647 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  807.7054  2073.3984  1886.0261  1884.0857 -1601.1952], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  641.953   1611.7227  1469.3099  1467.6006 -1266.9996], shape=(5,), dtype=float32)\n",
      "Epoch [175/200], Loss: 0.6714051653542413\n",
      "tf.Tensor([  807.71423  2073.4316   1886.056    1884.1191  -1601.1957 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  641.9719  1611.7582  1469.3203  1467.6172 -1267.0062], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2081.957   5215.763   4766.4946  4768.0854 -4282.6787], shape=(5,), dtype=float32)\n",
      "Epoch [176/200], Loss: 0.6714076427824306\n",
      "tf.Tensor([ 2081.9778  5215.808   4766.516   4768.1167 -4282.685 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  641.9946  1611.8074  1469.3434  1467.6519 -1267.0127], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  807.7645  2073.5378  1886.1027  1884.1912 -1601.2098], shape=(5,), dtype=float32)\n",
      "Epoch [177/200], Loss: 0.6713331064114936\n",
      "tf.Tensor([  807.7707  2073.5562  1886.1168  1884.2107 -1601.2112], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2082.0015  5215.934   4766.6816  4768.3174 -4282.682 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  641.99854  1611.8528   1469.4048   1467.7261  -1267.0095 ], shape=(5,), dtype=float32)\n",
      "Epoch [178/200], Loss: 0.6713874585485309\n",
      "tf.Tensor([ 2081.9814  5215.9707  4766.8022  4768.445  -4282.6646], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  641.9969  1611.8733  1469.439   1467.7648 -1267.0056], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  807.7688  2073.6228  1886.2239  1884.3329 -1601.2009], shape=(5,), dtype=float32)\n",
      "Epoch [179/200], Loss: 0.6712565465672631\n",
      "tf.Tensor([  807.77704  2073.6428   1886.2351   1884.3477  -1601.2032 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  642.01654  1611.9208   1469.4657   1467.7991  -1267.011  ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2082.0752  5216.186   4766.9287  4768.602  -4282.692 ], shape=(5,), dtype=float32)\n",
      "Epoch [180/200], Loss: 0.6712557128956886\n",
      "tf.Tensor([  807.8114  2073.7097  1886.2573  1884.3782 -1601.2152], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  642.04126  1611.9714   1469.4854   1467.8245  -1267.0194 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2082.142  5216.323  4766.988  4768.67  -4282.714], shape=(5,), dtype=float32)\n",
      "Epoch [181/200], Loss: 0.6712159043807445\n",
      "tf.Tensor([  807.8367  2073.77    1886.2894  1884.4158 -1601.222 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2082.1418  5216.38    4767.08    4768.758  -4282.7065], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  642.0446  1612.0178  1469.545   1467.8843 -1267.0155], shape=(5,), dtype=float32)\n",
      "Epoch [182/200], Loss: 0.6713064326798722\n",
      "tf.Tensor([ 2082.1055  5216.4077  4767.2104  4768.8706 -4282.68  ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  807.8113  2073.807   1886.3984  1884.5155 -1601.2013], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  642.0299  1612.04    1469.6077  1467.9392 -1267.0026], shape=(5,), dtype=float32)\n",
      "Epoch [183/200], Loss: 0.6713516899275341\n",
      "tf.Tensor([  807.80914  2073.8333   1886.4395   1884.5496  -1601.1954 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2082.0796  5216.513   4767.3994  4769.017  -4282.653 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  642.0377  1612.079   1469.6437  1467.9662 -1267.0012], shape=(5,), dtype=float32)\n",
      "Epoch [184/200], Loss: 0.6711246402467287\n",
      "tf.Tensor([ 2082.0898  5216.5923  4767.455   4769.0464 -4282.6514], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  642.04895  1612.1101   1469.6606   1467.9766  -1267.0017 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  807.8438  2073.9312  1886.4948  1884.5854 -1601.1979], shape=(5,), dtype=float32)\n",
      "Epoch [185/200], Loss: 0.6710290044663\n",
      "tf.Tensor([ 2082.1584  5216.7583  4767.469   4769.0356 -4282.6714], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  642.0752  1612.1642  1469.675   1467.9841 -1267.0068], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  807.876   2073.9988  1886.5153  1884.5985 -1601.2037], shape=(5,), dtype=float32)\n",
      "Epoch [186/200], Loss: 0.6709860635334072\n",
      "tf.Tensor([ 2082.2178  5216.9136  4767.5063  4769.057  -4282.6875], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  807.8834  2074.033   1886.5461  1884.6251 -1601.202 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  642.08875  1612.2194   1469.7217   1468.0249  -1267.0052 ], shape=(5,), dtype=float32)\n",
      "Epoch [187/200], Loss: 0.6711445968352786\n",
      "tf.Tensor([  642.098   1612.2374  1469.7269  1468.0322 -1267.0079], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2082.2766  5217.085   4767.6055  4769.1577 -4282.698 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  807.92676  2074.1223   1886.5791   1884.6702  -1601.213  ], shape=(5,), dtype=float32)\n",
      "Epoch [188/200], Loss: 0.6712375326657153\n",
      "tf.Tensor([ 2082.3093  5217.167   4767.667   4769.236  -4282.7036], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  807.9166  2074.143   1886.6335  1884.7291 -1601.2042], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  642.10815  1612.3008   1469.7988   1468.1174  -1267.0045 ], shape=(5,), dtype=float32)\n",
      "Epoch [189/200], Loss: 0.6713356629427635\n",
      "tf.Tensor([  807.9052  2074.1619  1886.6904  1884.7905 -1601.1958], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  642.11316  1612.3265   1469.8271   1468.1523  -1267.005  ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2082.305   5217.289   4767.939   4769.5337 -4282.681 ], shape=(5,), dtype=float32)\n",
      "Epoch [190/200], Loss: 0.6709536944690225\n",
      "tf.Tensor([ 2082.3152  5217.325   4767.9785  4769.5776 -4282.6816], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  642.12427  1612.3682   1469.8643   1468.1976  -1267.0055 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  807.93115  2074.2532   1886.7676   1884.8855  -1601.198  ], shape=(5,), dtype=float32)\n",
      "Epoch [191/200], Loss: 0.6709406441399374\n",
      "tf.Tensor([  642.1372  1612.4009  1469.8827  1468.221  -1267.0079], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  807.9632  2074.306   1886.773   1884.9001 -1601.2091], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2082.434   5217.566   4768.0786  4769.71   -4282.7134], shape=(5,), dtype=float32)\n",
      "Epoch [192/200], Loss: 0.6711485345433191\n",
      "tf.Tensor([  807.98376  2074.3499   1886.7916   1884.9243  -1601.2151 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2082.426   5217.6167  4768.1865  4769.809  -4282.703 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  642.15564  1612.4707   1469.9437   1468.2863  -1267.01   ], shape=(5,), dtype=float32)\n",
      "Epoch [193/200], Loss: 0.6710227567211898\n",
      "tf.Tensor([ 2082.383   5217.6416  4768.328   4769.932  -4282.674 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  642.149   1612.489   1469.9839  1468.3232 -1267.0028], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  807.9636  2074.4075  1886.9185  1885.0415 -1601.194 ], shape=(5,), dtype=float32)\n",
      "Epoch [194/200], Loss: 0.6708749478141098\n",
      "tf.Tensor([ 2082.3894  5217.744   4768.4463  4770.0337 -4282.6616], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  807.96356  2074.4368   1886.9585   1885.0737  -1601.1886 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  642.1504  1612.5366  1470.0452  1468.3728 -1266.9951], shape=(5,), dtype=float32)\n",
      "Epoch [195/200], Loss: 0.6709431898994787\n",
      "tf.Tensor([  642.161   1612.5559  1470.0486  1468.3745 -1266.9982], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  808.0013  2074.5093  1886.9747  1885.0833 -1601.1989], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2082.5095  5218.016   4768.4966  4770.0503 -4282.702 ], shape=(5,), dtype=float32)\n",
      "Epoch [196/200], Loss: 0.6712221788035763\n",
      "tf.Tensor([ 2082.523   5218.061   4768.521   4770.068  -4282.7046], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  808.02386  2074.5698   1887.01     1885.1128  -1601.2026 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  642.19354  1612.638    1470.0908   1468.4106  -1267.0049 ], shape=(5,), dtype=float32)\n",
      "Epoch [197/200], Loss: 0.6709700791869532\n",
      "tf.Tensor([  808.0185  2074.5955  1887.0579  1885.155  -1601.1959], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  642.2034  1612.6685  1470.1128  1468.4321 -1267.007 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2082.542   5218.235   4768.7227  4770.2417 -4282.6973], shape=(5,), dtype=float32)\n",
      "Epoch [198/200], Loss: 0.670753624535284\n",
      "tf.Tensor([  642.22644  1612.7089   1470.1199   1468.4442  -1267.0148 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([ 2082.613   5218.353   4768.736   4770.2725 -4282.719 ], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  808.0813  2074.7163  1887.0928  1885.2062 -1601.2142], shape=(5,), dtype=float32)\n",
      "Epoch [199/200], Loss: 0.670826620412016\n",
      "tf.Tensor([ 2082.6199  5218.4165  4768.828   4770.3745 -4282.7104], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  642.2338  1612.7612  1470.1788  1468.5125 -1267.0098], shape=(5,), dtype=float32)\n",
      "tf.Tensor([  808.06604  2074.7493   1887.1755   1885.2949  -1601.1989 ], shape=(5,), dtype=float32)\n",
      "Epoch [200/200], Loss: 0.6707488867628522\n"
     ]
    }
   ],
   "source": [
    "import tensorflow as tf\n",
    "from tensorflow.keras import layers, models, losses, optimizers, callbacks\n",
    "\n",
    "# Assuming you have already defined the GaussianGenerator and LeNet5 classes here\n",
    "\n",
    "# Create an instance of the LeNet5 model\n",
    "img_dim = (29, 48)\n",
    "num_classes = 5\n",
    "net = LeNet5(GaussianGenerator(img_dim), num_classes)\n",
    "\n",
    "# Define the loss function\n",
    "criterion = losses.BinaryFocalCrossentropy()\n",
    "\n",
    "# Define the optimizer\n",
    "lr = 1e-2\n",
    "optimizer = optimizers.Adam(learning_rate=lr)\n",
    "\n",
    "# Load the dataset\n",
    "file_path = '/home/ferroelectric/RHEED_paper/m3_learning/m3_learning/papers/2023_RHEED_PLD_SrTiO3/Datasets/test6_gaussian_fit_parameters_all-04232023.h5'\n",
    "dataset_key = 'growth_1/spot_2/raw_image'\n",
    "dataset = HDF5Dataset(file_path, dataset_key)\n",
    "\n",
    "# Create a data loader for the dataset\n",
    "batch_size = 5000\n",
    "data_loader = tf.data.Dataset.from_tensor_slices(dataset.data)\n",
    "data_loader = data_loader.batch(batch_size).shuffle(buffer_size=len(dataset))\n",
    "\n",
    "# Define the number of epochs\n",
    "num_epochs = 200\n",
    "\n",
    "# Define the learning rate schedule\n",
    "def lr_schedule(epoch, lr):\n",
    "    if epoch < num_epochs // 2:\n",
    "        return lr\n",
    "    else:\n",
    "        return lr * 0.1\n",
    "\n",
    "# Create a learning rate scheduler callback\n",
    "lr_scheduler = callbacks.LearningRateScheduler(lr_schedule)\n",
    "\n",
    "# Training loop\n",
    "for epoch in range(num_epochs):\n",
    "    running_loss = 0.0\n",
    "\n",
    "    for images in data_loader:\n",
    "        # images = tf.expand_dims(images, axis=-1)\n",
    "\n",
    "        with tf.GradientTape() as tape:\n",
    "            outputs = net(images)\n",
    "\n",
    "            # Calculate the loss\n",
    "            loss = criterion(outputs, images)\n",
    "\n",
    "        # Calculate gradients and update weights\n",
    "        gradients = tape.gradient(loss, net.trainable_variables)\n",
    "        optimizer.apply_gradients(zip(gradients, net.trainable_variables))\n",
    "\n",
    "        running_loss += loss.numpy()\n",
    "\n",
    "    average_loss = running_loss / len(data_loader)\n",
    "\n",
    "    print(f\"Epoch [{epoch+1}/{num_epochs}], Loss: {average_loss}\")\n",
    "    updated_lr = lr_schedule(epoch, lr)\n",
    "    optimizer.learning_rate.assign(updated_lr)\n",
    "\n",
    "# Save the trained model\n",
    "net.save_weights('best-model.h5')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model: \"le_net5_10\"\n",
      "_________________________________________________________________\n",
      " Layer (type)                Output Shape              Param #   \n",
      "=================================================================\n",
      " sequential_20 (Sequential)  (None, 6, 11, 6)          180       \n",
      "                                                                 \n",
      " sequential_21 (Sequential)  (None, 1, 3, 16)          2480      \n",
      "                                                                 \n",
      " dense_30 (Dense)            multiple                  2352      \n",
      "                                                                 \n",
      " re_lu_42 (ReLU)             multiple                  0         \n",
      "                                                                 \n",
      " dense_31 (Dense)            multiple                  1176      \n",
      "                                                                 \n",
      " re_lu_43 (ReLU)             multiple                  0         \n",
      "                                                                 \n",
      " dense_32 (Dense)            multiple                  125       \n",
      "                                                                 \n",
      " gaussian_generator_18 (Gaus  multiple                 0         \n",
      " sianGenerator)                                                  \n",
      "                                                                 \n",
      " flatten_10 (Flatten)        multiple                  0         \n",
      "                                                                 \n",
      "=================================================================\n",
      "Total params: 6,313\n",
      "Trainable params: 6,269\n",
      "Non-trainable params: 44\n",
      "_________________________________________________________________\n"
     ]
    }
   ],
   "source": [
    "net.summary()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x400 with 5 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x400 with 5 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x400 with 5 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x400 with 5 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAABKUAAAGFCAYAAAAsKUDaAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAACbI0lEQVR4nOzde1xVdb4//te+b0DAUAPxgmQOUjZaWCZl6qQYpml1js5xRtPRjg5eIkpHUgvNZLSJsVKZrDFvlZ7GvDQ/R2O+FemhVEhnNKe00UIR9GjETdjX9fuD2Lpd742bBXJ9PR+P/Sg/+7PW+qy1Lx/2Z631+ugURVFARERERERERETUiPRN3QAiIiIiIiIiImp7OChFRERERERERESNjoNSRERERERERETU6DgoRUREREREREREjY6DUkRERERERERE1Og4KEVERERERERERI2Og1JERERERERERNToOChFRERERERERESNjoNSRERERERERETU6DgoRUREREREREREjY6DUkRERERELcBnn32G0aNHIzIyEjqdDjt27LjuMtnZ2YiLi4PVasUtt9yCP/3pT6o627Ztw2233QaLxYLbbrsN27dvV9VZs2YNoqOjYbVaERcXh3379nk9rygK0tLSEBkZiYCAAAwZMgRfffWVVx2bzYbZs2ejY8eOCAoKwiOPPIKzZ8/W7SDU0Y06ZkRE1DA4KEVERERE1AJUVFSgb9++WLVqlV/1T58+jZEjR2LQoEE4fPgwnnvuOcyZMwfbtm3z1Pn8888xfvx4TJw4Ef/4xz8wceJEjBs3DgcOHPDU2bp1K5KTk7FgwQIcPnwYgwYNQmJiIvLz8z11VqxYgYyMDKxatQqHDh1CREQEhg8fjrKyMk+d5ORkbN++HVu2bMH+/ftRXl6OUaNGweVyNcDRkd2IY0ZERA1HpyiK0tSNICIiIiIi/+l0Omzfvh1jx471Wed3v/sddu3ahX/961+eshkzZuAf//gHPv/8cwDA+PHjUVpair/97W+eOg899BBuuukmvPfeewCAAQMG4K677kJmZqanTmxsLMaOHYv09HQoioLIyEgkJyfjd7/7HYDqq6LCw8OxfPlyTJ8+HSUlJejUqRM2bdqE8ePHAwDOnTuHbt26Yffu3RgxYkSDHRtfGuqYERFRwzE2dQOIiJpaVVUV7HZ7vdZhNpthtVob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5EmvOkVFRZg4cSIiIiIQFBSEu+66C3/5y1/qcTSIiKgl46AUEREAF/T1ehARUdvU2P3H1q1bkZycjAULFuDw4cMYNGgQEhMTkZ+fL9bPzMxEamoq0tLS8NVXX2Hx4sWYOXMmPvzwQ0+dhQsX4o033sDrr7+O48ePY8aMGXj00Udx+PBhT51p06YhKysLmzZtwtGjR5GQkIBhw4ahoKAAAKAoCsaOHYtTp05h586dOHz4MKKiojBs2DBUVFR41jNx4kR888032LVrF44ePYrHHnsM48eP99oWERG1HTpFUZSmbgQRUVMpLS1FaGgoVhwahIB22u5orix3Yt7d+1BSUoKQkJAGbiERETVHTdV/DBgwAHfddRcyMzM9ZbGxsRg7dizS09NV9ePj43Hffffh5Zdf9pQlJycjNzcX+/fvBwBERkZiwYIFmDlzpqfO2LFj0a5dO2zevBmVlZUIDg7Gzp078fDDD3vq9OvXD6NGjcLSpUtx4sQJxMTE4NixY7j99tsBAC6XCzfffDOWL1+OadOmAQDatWuHzMxMTJw40bOeDh06YMWKFZg6dapfx6C5q3lv8O8CImptbsT3G0/vExEBcNfjLLebX6VERG1WQ/QfpaWlXg+bzSZuy263Iy8vDwkJCV7lCQkJyMnJEZex2WywWq1eZQEBATh48CAcDketdWoGrZxOJ1wuV611atp8dR2DwQCz2eypAwD3338/tm7dih9++AFutxtbtmyBzWbDkCFDxPYTEVHrxl9SRERERERNqFu3bggNDfU8pCueAODixYtwuVwIDw/3Kg8PD0dRUZG4zIgRI/DWW28hLy8PiqIgNzcX69atg8PhwMWLFz11MjIycPLkSbjdbmRlZWHnzp0oLCwEAAQHB2PgwIF48cUXce7cObhcLmzevBkHDhzw1OnduzeioqKQmpqK4uJi2O12/P73v0dRUZGnDlB9+6HT6USHDh1gsVgwffp0bN++HT179qz3cSQiopaHg1JERADcir5eDyIiapsaov84c+YMSkpKPI/U1NRat6nT6bz+rSiKqqzGokWLkJiYiHvvvRcmkwljxozB5MmTAVRfyQQAr776Knr16oXevXvDbDZj1qxZmDJliud5ANi0aRMURUGXLl1gsVjw2muvYcKECZ46JpMJ27Ztw4kTJxAWFobAwEB8+umnSExM9FrPwoULUVxc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fvgB77//Pn7xi19oWj4tLQ3FxcX46quv0L17dwDAgw8+iICAADz77LOYO3durZkiBQUFePbZZ7FixQpERkZqagORL4mJiUhMTBSfUxQFK1euxIIFCzy35mzYsAHh4eF49913MX36dJSUlODPf/4zNm3ahGHDhgEANm/ejG7duuHvf/87RowY0Wj7QnQ9LpcLTqcTVVVVyM7OxtKlSxEcHIxHHnnEU8fhcOD555/HlClTPGVbtmzBnj17sG3bNq/b1Pr27Yu7774b69evx29/+1t8/fXX2LBhA55++mmsWLECADB8+HCEh4f7vD3wajNnzkT37t1x4MABWK1WT3lNW7p27erpR+68806vUPIzZ87ghRdewKxZs/Daa695yocPH45evXph8eLF2Lp1K9xuNxYsWIC77roL27dvh05XfcvW/fffj169evnVz7BfIiIiotaIp2eoWbrppps0D0gBwF//+lcMHToUkZGRcDqdnkfNQEB2dnaty8+YMQN9+/bFk08+qbkN1LK4oavXAwBKS0u9Hjabrc7tOH36NIqKipCQkOAps1gsGDx4MHJycgAAeXl5cDgcXnUiIyPRp08fTx2i5uLee++FyWRCcHAwRo0ahYiICPztb39DeHi4V71rrxr861//ivbt22P06NFe3+P9+vVDRESE5/a5Tz75BABUA1Djxo2D0Vj7ubcTJ07g3//+N6ZOneo1IOWvvXv3wul0YtKkSV5ttFqtGDx4sKeN33zzDc6dO4cJEyZ4BqQAICoqCvHx8X5ti/1S89UQ/QcREVFbxSulqFmquT1Cq/Pnz+PDDz+EyWQSn7948aLPZf/yl79gz5492L9/P0pKSryes9vt+PHHHxEUFORz3dQyuRQdXIrGoNqfluvWrZtX+QsvvCBmoNWmqKgIAFQ/2MPDwz0ZPEVFRTCbzbjppptUdWqWJ2ouNm7ciNjYWBiNRoSHh4vf74GBgQgJCfEqO3/+PH788UeYzWZxvTXf45cuXQIAREREeD1vNBrRoUOHWttWk03VtWtX/3bmGufPnwcA3H333eLzNbfl+WpjTdl3331X63bYLzVvDdF/EBERtVUclKJm6eozyVezWCzi1Sc1f/DX6NixI37+85/jpZdeEtdT260Px44dg9PpFGdoevPNN/Hmm29i+/btGDt2bC17QC1NQ2SCnDlzxuuHtcVi0dye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/xxjxozBww8/DADo0aMH3nvvPeTm5v60PgUrV67EggUL8NhjjwEANmzYgPDwcLz77ruYPn26pnYSEVHD45VSRERE2jFTioiogZSWlno9bDabWO/+++/H//t//w8nTpwAAPzjH//A/v37MXLkSADA6dOnUVRUhISEBM8yFosFgwcPRk5Ozo3fESIiIiIiokbAK6WIiID6zYL003LdunXzKn7hhReQlpamqv673/0OJSUl6N27NwwGA1wuF1566SX813/9FwB4pq6+drrq8PBwfP/99xobSUREN0QD9B9ERERtVZMOSn322Wd4+eWXkZeXh8LCQmzfvh1jx471PN+QQb8uix66q0KpnUJ4eVV7/y+hdgsZ0cpN6pBpc4C6LDy4TFxnmEUddB7T7ryqLMpyUVV2pKK7qqyLRR2IDgAOt/plP1YWqSqzGNQhrCetncR12oRQ9dIKdRq8A+pZS5xCPI71ghw+qgjh3o526tfNJGXJC6ss7yx/BMzl6mBYp1V9YaG5TB0W67KqN2Soki9K1LmksFghuLdK/VooJvV2pDJf9BVV6kKTcDykUHLIoeaKFDBfIQTrW9TB7TAIZQBgs6u3c1XIuiIErmuj++mhdVngzJkzCAkJ8ZRaLHJI/NatW7F582a8++67uP3223HkyBEkJycjMjISTzzxxJW16rzboyiKqqytatT+A3q4rrqw2CVcZOxSfFx4LLxcLj/fZw31zr6aoZ7vH79DzeuyrBCALu27GMguTLLhK+BdCkAXyxSpnhCILoSfA3Koubi8VE8ML/exHaHcKK1TCDo3CEHleqEeAOgMwqiJsLxUpvh4v/kbdC71h1L4uVuo57PceNX7qMG+T+vffxAREbVVTXr7XkVFBfr27YtVq1aJz9cE/a5atQqHDh1CREQEhg8fjrIyeVCHiEgzpZ4PACEhIV4PX4NSc+fOxfz58/HLX/4Sd9xxByZOnIinn34a6enpAICIiAgAV66YqnHhwgXV1VNtFfsPImo2GqD/ICIiaqua9EqpxMREJCYmis9pDfq12WxeOS6lpaUN33Aionq4fPky9HrvcwIGgwHun676io6ORkREBLKysnDnnXcCAOx2O7Kzs7F8+fJGb29zxP6DiIiIiKjla7ZB51qDftPT0xEaGup5XJvxQkQkasQz3aNHj8ZLL72E/+//+//w3XffYfv27cjI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Q2VlJR588EGsX7/+urlTRETUOukUXpdORG1YaWkpQkND8Ys758NosF5/AYHTVYWPD/8eJSUlCAkJaeAWEhFRc8T+g3ypeW/wdSWi1uZGfL8xU4qIiIiIiIiIiBodb98jIgJ+mppbayZIg7aEiIhaEvYfREREmnFQiogIYNA5ERFpw/6DiIhIMw5KEREB1SG1unosS0REbRP7DyIiIs2YKUVERERERERERI2OV0oREQHQKQp0Gm+j0LocERG1fOw/iIiItOOgFBERwEwQIiLShv0HERGRZhyUIiIC+KOCiIi0Yf9BRESkGTOliIiIiIiIiIio0fFKKSIigGe6iYhIG/YfREREmnFQiogI4JTeRESkDfsPIiIizTgoRUQEzp5ERETasP8gIiLSjplSRERERERERETU6HilFBERwEwQIiLShv0HERGRZhyUIiICALcC6DT+OHDzRwURUZvF/oOIiEgzDkoREQE8001ERNqw/yAiItKMmVJERERERERERNToeKUUEREAoB5nusEz3UREbRf7DyIiIq04KEVEBPD2CyIi0ob9BxERkWYclCIiAn4Km2VQLRER1RH7DyIiIs2YKUVERERERERERI2OV0oREQGA4q5+aF2WiIjaJvYfREREmnFQiogIYCYIERFpw/6DiIhIMw5KEREBzAQhIiJt2H8QERFpxkwpIiIiIiIiIiJqdLxSiogI4O0XRESkDfsPIiIizTgoRUQEVN95oflHRYO2hIiIWhL2H0RERJpxUIqICOCZbiIi0ob9BxERkWbMlCIiIiIiIiIiokbHK6WIiADA7QbgrseyRETUJrH/ICIi0oyDUkREAG+/ICIibdh/EBERacZBKSIigD8qiIhIG/YfREREmjFTioiIiIiIiIiIGh2vlCIiAgC3As1zc7t5ppuIqM1i/0FERKQZB6WIiAAoihuKoi1wVutyRETU8rH/ICIi0o6DUkREQHWuh9Yz1swEISJqu9h/EBERacZMKSIiIiIiIiIianS8UoqICPjpbDXPdBMRUR2x/yAiItKMg1JERADgdgM6jdkezAQhImq72H8QERFpxkEpIiKAZ7qJiEgb9h9ERESaMVOKiIiIiIiIiIgaHQeliIgAKG53vR51kZ6ejrvvvhvBwcG4+eabMXbsWHzzzTfe7VEUpKWlITIyEgEBARgyZAi++uqrhtxlIiJqAI3ZfxAREbU2HJQiIgKqb6Goz6MOsrOzMXPmTHzxxRfIysqC0+lEQkICKioqPHVWrFiBjIwMrFq1CocOHUJERASGDx+OsrKyht5zIiKqj0bsP4iIiFobZkoREQGAWwF0jZMJsmfPHq9/v/3227j55puRl5eHBx54AIqiYOXKlViwYAEee+wxAMCGDRsQHh6Od999F9OnT9fWTiIianiN2H8QERG1NrxSioiogZSWlno9bDabX8uVlJQAAMLCwgAAp0+fRlFRERISEjx1LBYLBg8ejJycnIZvOBERERERURPgoBQREfDTbRRujY/qM93dunVDaGio55Genu7HZhWkpKTg/vvvR58+fQAARUVFAIDw8HCvuuHh4Z7niIiomWiA/qOu1qxZg+joaFitVsTFxWHfvn211l+9ejViY2MREBCAmJgYbNy40et5h8OBJUuWoGfPnrBarejbt6/qqt6ysjIkJycjKioKAQEBiI+Px6FDh7zqlJeXY9asWejatSsCAgIQGxuLzMxMrzpFRUWYOHEiIiIiEBQUhLvuugt/+ctfNB0HIiJq+Xj7HhERAMWtQNF4+4Xy04+KM2fOICQkxFNusViuu+ysWbPwz3/+E/v371c9p9PpVNu5toyIiJpWQ/QfdbF161YkJydjzZo1uO+++/DGG28gMTERx48fR/fu3VX1MzMzkZqaijfffBN33303Dh48iCeffBI33XQTRo8eDQBYuHAhNm/ejDfffBO9e/fG3r178eijjyInJwd33nknAGDatGk4duwYNm3ahMjISGzevBnDhg3D8ePH0aVLFwDA008/jU8++QSbN29Gjx498NFHHyEpKQmRkZEYM2YMAGDixIkoKSnBrl270LFjR7z77rsYP348cnNzPdsiIqK2g1dKEREB9TjL/dMDQEhIiNfjeoNSs2fPxq5du/DJJ5+ga9eunvKIiAgAUF0VdeHCBdXVU0RE1MQaoP+oi4yMDEydOhXTpk1DbGwsVq5ciW7duqmuSKqxadMmTJ8+HePHj8ctt9yCX/7yl5g6dSqWL1/uVee5557DyJEjccstt+C3v/0tRowYgVdeeQUAUFlZiW3btmHFihV44IEHcOuttyItLQ3R0dFe2/3888/xxBNPYMiQIejRowf++7//G3379kVubq5XndmzZ+Oee+7BLbfcgoULF6J9+/b48ssv63ws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ItDc3IySkhKICP755x8cOnQIb731lhotjxulrm1apRsjIiIiIiJ6ErW3t2NgYABTp04dtj516lS0tbWNeE5bW9uI9f39/Whvb4efn5/D+lWKPbkftHPnTty5cwexsbGOaNFh7Mn+999/Iy0tDadPn4ZWOzF/5bYnd0NDAyoqKqDX63HkyBG0t7fj448/xo0bNybMfaXsyR0REYH8/HzExcXh7t276O/vxzvvvINdu3ap0fK4Ueraxp1SRERERERENnBxcRn2tYhYrf1X/Ujrjztbcw85cOAAtm7disLCQjz33HOOas+hRpt9YGAAH374IT7//HPMnDlTrfYcxpbXfHBwEC4uLsjPz8e8efMQHR2NrKws/PDDDxNqtxRgW+7a2lokJSVhy5YtqKqqwvHjx9HY2IjExEQ1Wh1XSlzbJubYloiIiIiISGVTpkyBRqOx2jFx7do1qx0DQ3x9fUes12q18PHxcVivSrIn95DCwkIkJCTg4MGDWLx4sSPbdAhbs3d2duLs2bMwm8345JNPANwf1ogItFotTpw4gTfeeEOV3sfCntfcz88P/v7+8PLysqzNnj0bIoLm5mYEBgY6tGcl2JN7+/btmD9/PlJSUgAAr732Gjw9PREZGYkvv/xyQuyGtIdS1zbulCIiIiIiIhoFNzc3GI1GlJWVDVsvKytDRETEiOeEh4db1Z84cQKhoaHQ6XQO61VJ9uQG7u+QWrNmDfbv3z9h769ja/bJkyfjr7/+QnV1teVITExEUFAQqqurERYWplbrY2LPaz5//nxcvXoVXV1dlrULFy7A1dUVAQEBDu1XKfbk7u7uhqvr8NGKRqMB8P+dQ08ixa5tQkRERERERKNSUFAgOp1OcnNzpba2VjZs2CCenp5y6dIlERFJS0uTVatWWeobGhpk0qRJkpycLLW1tZKbmys6nU4OHTo0XhHsYmvu/fv3i1arld27d0tra6vluHXr1nhFsJut2R+UkZEhISEhKnWrHFtzd3Z2SkBAgHzwwQdSU1Mj5eXlEhgYKOvWrRuvCHaxNfeePXtEq9VKdna21NfXS0VFhYSGhsq8efPGK4JdOjs7xWw2i9lsFgCSlZUlZrNZLl++LCKOu7ZxKEVERERERGSD3bt3i8FgEDc3N5k7d66Ul5db/mz16tUSFRU1rP7kyZPy+uuvi5ubm0yfPl1ycnJU7lgZtuSOiooSAFbH6tWr1W9cAba+5v82UYdSIrbnrqurk8WLF4uHh4cEBASIyWSS7u5ulbseO1tzf/311xIcHCweHh7i5+cnK1eulObmZpW7Hptffvnlkf9mHXVtcxF5gveTERERERERERHRY4n3lCIiIiIiIiIiItVxKEVERERERERERKrjUIqIiIiIiIiIiFTHoRQREREREREREamOQykiIiIiIiIiIlIdh1JERERERERERKQ6DqWIiIiIiIiIiEh1HEoREREREREREZHqOJQiIiIiIiIiIiLVcShFRERERERERESq41CKiIiIiIiIiIhU9z8vrCRRknfAbwAAAABJRU5ErkJggg==",
      "text/plain": [
       "<Figure size 1200x400 with 5 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x400 with 5 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x400 with 5 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x400 with 5 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x400 with 5 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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QSkiogbWlPoPIiKi5oZXShERAXApOrgUbV8OarpcaWkpvv/+e/e/T548iYMHDyIsLAxRUVH4n//5H3z11Vf4xz/+AafT6c6JCgsLg9lsRmhoKCZNmoQ///nPaNu2LcLCwvDEE0/glltucc/GR0REDaMh+w8iIqKWhoNSREQNbP/+/Rg0aJD736mpqQCAhx56COnp6di+fTsAoFevXh7LffLJJxg4cCAA4MUXX4TRaMTo0aNRUVGBu+++G2vWrIHBYGiQfSAiIiIiIqotDkoREaFhM0EGDhwIRfE+5dK1nqtmsViwbNkyLFu2rEbbJiKiusVMKSIiIu04KEVEBMAJPZwaY/acddwWIiJqPth/EBERacdBKSIiAEotMkEUZoIQEbVa7D+IiIi04+x7RERERERERETU4HilFBERmAlCRETasP8gIiLSjoNSREQAnIoeTkVjJsgv55ITEVELxf6DiIhIOw5KEREBcEEHl8Y7ml3gtwoiotaK/QcREZF2zJQiIiIiIiIiIqIGxyuliIjATBAiItKG/QcREZF2HJQiIkJtM0F4+wURUWvF/oOIiEg7DkoREaE6E0TbL9ZalyMiouaP/QcREZF2zJQiIiIiIiIiIqIGxyuliIgAuKCHk7MnERFRDbH/ICIi0o6DUkREYCYIERFpw/6DiIhIOw5KERGh6pduF3/pJiKiGmL/QUREpB0zpYiIiIiIiIiIqMHxSikiIgBORQenom0WJK3LERFR88f+g4iISDsOShERAXDWIqjWydsviIhaLfYfRERE2nFQiogIgEvRw6UxqNbFoFoiolaL/QcREZF2zJQiIiIiIiIiIqIGxyuliIjA2y+IiEgb9h9ERETacVCKiAiAC9oDZ1112xQiImpG2H8QERFpx0EpIiIALujh0vhLt9bliIio+WP/QUREpB17QiIiIiIiIiIianAclCIiAuBU9LV6EBFR69QY/ceKFSsQExMDi8WChIQEfP7559es/8orryAuLg7+/v6IjY3FunXrPJ632+2YN28eunXrBovFgp49e2Lnzp0edS5duoSUlBRER0fD398fiYmJ2Ldvn0eds2fPYsKECYiKikJAQADuueceHD9+3KNOYWEhxo0bh8jISAQGBqJPnz74+9//ruk4EBFR88dvUkREAFzQ1epBREStU0P3H5s2bUJKSgpmzZqFAwcO4M47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jl/96ld47rnnxPX80q0S7du3x44dO3Du3DkUFhYiOjoa/v7+WLFiBf7nf/7Hx72g5qQ22R7Vy+Xn53t8sb46/8UXhYWFAKC6iiQiIsIdDF1YWAiz2YzrrrtOVad6eaKmIi4uzj37njfSOT88PBxt27bFzp07xWWqb2WtHngqLCxEx44d3c87HI5fvK2tOtdKax5beHg4AODvf/87oqOjvda7so1X8/Vvlv1S01UX/QcREVFrxUEpala6du2qCnT9+OOPUVpa6lE2fPhw7NixA926dVN9ca+J9u3bo3379gCAl19+GWVlZXjkkUc0r49atpCQENXVHlpd/SVdURSvg7U1qUPUXAwfPhwbN26E0+lEv379vNYbOHAgAOCtt95CQkKCu/z//u//fnG21RtvvBHdunXD6tWrkZqa6nUgubr8ynB1ABg6dCiMRiN++OEHMR+uWmxsLDp06IB33nkHqamp7r/TU6dOIScn5xd/KLkS+yUiIiJqSTgoRc3KuHHjMGfOHDzzzDMYMGAAjhw5guXLlyM0NNSj3rx585CVlYXExEQ89thjiI2NRWVlJX788Ufs2LEDf/vb3655u8Zrr70GAOjWrRsuXryIDz74AG+88QYWLlzonnGJWhYXqqbn1rpsXam+vaewsNDjNqdz5865r56KjIyEzWZDUVGRx6DruXPnfMqnIWoOfvvb3+Ktt97CsGHD8Pjjj+PXv/41TCYTTp8+jU8++QQjR47E/fffj7i4OPzhD3/A0qVLYTKZMHjwYBw+fBh//etffRokfuWVVzBixAjcdtttmDFjBrp06YK8vDzs2rULb731FgDglltuAQC89NJLeOihh2AymRAbG4uuXbti3rx5mDVrFk6cOIF77rkH1113Hc6ePYu9e/ciMDAQc+fOhV6vx/z58zF58mTcf//9ePjhh3Hx4kWkp6eLt/RJ2C81XU2l/yAiImqOOChFzcqTTz6JkpISrFmzBn/961/x61//Gv/3f/+HkSNHetTr0KED9u/fj/nz5+OFF17A6dOnERwcjJiYGPeXhmupDps+deoU9Ho9evfujS1btqi2Qy2HUovAWaUOv1TExMQgMjISWVlZ6N27N4Cq6eCzs7OxaNEiAEBCQgJMJhOysrLc+TIFBQU4fPiwe/YxoubOYDBg+/bteOmll7B+/XpkZGTAaDSiU6dOGDBggHug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",
      "text/plain": [
       "<Figure size 1200x400 with 5 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import tensorflow as tf\n",
    "from tensorflow.keras import layers, models\n",
    "import h5py\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "data = next(iter(data_loader))\n",
    "outputs = net(data)\n",
    "path = '/home/ferroelectric/RHEED_paper/m3_learning/m3_learning/papers/2023_RHEED_PLD_SrTiO3/Datasets/test6_gaussian_fit_parameters_all-04232023.h5'\n",
    "manual_im=[]\n",
    "with h5py.File(path, 'r') as h5:\n",
    "    for i in range(100):\n",
    "        manual_im.append(h5['growth_1']['spot_2']['reconstructed_image'][i])\n",
    "    \n",
    "\n",
    "for i in range(10):\n",
    "    fig, axs = plt.subplots(1, 3, figsize=(12, 4))\n",
    "\n",
    "    # Plot true image\n",
    "    im0 = axs[0].imshow(data[i])\n",
    "    axs[0].set_title(f'True {i}')\n",
    "    axs[0].set_xlabel('X')\n",
    "    axs[0].set_ylabel('Y')\n",
    "    fig.colorbar(im0, ax=axs[0])\n",
    "\n",
    "    # Plot predicted image\n",
    "    im1 = axs[1].imshow(outputs[i])\n",
    "    axs[1].set_title(f'Predicted {i}')\n",
    "    axs[1].set_xlabel('X')\n",
    "    axs[1].set_ylabel('Y')\n",
    "    fig.colorbar(im1, ax=axs[1])\n",
    "\n",
    "    plt.tight_layout()\n",
    "\n",
    "    # Save the figure\n",
    "    plt.savefig(f'OutputData/images_{i}.png')\n",
    "\n",
    "    # Display the figure\n",
    "    plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "pytorch",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.12"
  },
  "orig_nbformat": 4
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
